<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何在Github添加ssh密钥</title>
      <link href="/2024/05/23/C%E8%AF%AD%E8%A8%80/%E5%A6%82%E4%BD%95%E5%9C%A8Github%E6%B7%BB%E5%8A%A0ssh%E5%AF%86%E9%92%A5/"/>
      <url>/2024/05/23/C%E8%AF%AD%E8%A8%80/%E5%A6%82%E4%BD%95%E5%9C%A8Github%E6%B7%BB%E5%8A%A0ssh%E5%AF%86%E9%92%A5/</url>
      
        <content type="html"><![CDATA[<p>首先在本地生成公钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>公钥默认生成在用户目录下的 .ssh目录下的 id_ed25519.pub中</p><p>进入Github 进入SSH页面</p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20240523213636550.png" alt="image-20240523213636550" style="zoom: 33%;" /><p>复制到key中 生成即可，这样就可以用 git 将本地代码推送到GitHub仓库中了</p><p>Gitee同理</p><p>参考：<a href="https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account">https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IO</title>
      <link href="/2024/05/23/C%E8%AF%AD%E8%A8%80/IO/"/>
      <url>/2024/05/23/C%E8%AF%AD%E8%A8%80/IO/</url>
      
        <content type="html"><![CDATA[<h2 id="linux-文件种类">linux 文件种类</h2><ol><li>普通文件 -</li><li>目录文件 d</li><li>管道文件 p：一种用于进程间通信的特殊文件，也称为命名管道FIFO。</li><li>套接字文件s：一种用于网络间通信的特殊文件。</li><li>链接文件l：用于间接访问另外一个目标文件，相当于Windows快捷方式。</li><li>字符设备文件c：字符设备在应用层的访问接口。触摸屏 、液晶屏、键盘、鼠标</li><li>块设备文件b：块设备在应用层的访问接口。硬盘、U盘 、光盘</li></ol><blockquote><p>ls -l 第一列的第一个字符 就代表文件种类</p></blockquote><h2 id="IO简介">IO简介</h2><p>I/O是在内存和外部设备（磁盘驱动器、网络、终端）之间复制数据的过程。输入是从外部 设备复制到内存，输出是从内存复制到外部设备。</p><p>在Linux系统中所有的I/O设备都被映射称为文件，所有的输入输出都被当做相应文件的读和写来执行， 所以内核提供了系统级的I/O函数接口，使得所有输入输出都以统一且一致的方式来执行。</p><p>文件读写的过程</p><ol><li>打开文件，返回一个非负整数，叫做描述符</li><li><strong>每个进程都默认打开三个描述符</strong><ol><li>标准输入 STDIN_FILENO（描述符0）</li><li>标准输出  STDOUT_FILENO（描述符1）</li><li>标准出错 STDERR_FILENO（描述符2）</li></ol></li><li>读写文件，读就是从文件复制n个字节到内存，写就是从内存复制n个字节到文件。</li><li><strong>文件偏移：默认打开文件是从文件开头起始的字节偏移量，可以使用seek来操作。</strong></li><li><strong>关闭文件。</strong></li></ol><p><strong>文件描述符fd 是什么？</strong></p><p>打开或新建文件后，Linux会返回一个非负整数，就是文件描述符，从0开始分配，012是预先分配好的，分别是stdin，stdout，stderr，fd相当于标准IO中的文件指针fp。</p><p><strong>另外文件描述符实际上也标记了打开的文件，之后 read, write, lseek函数的第一个参数都是这个文件描述符</strong></p><p>在 Linux 系统中，不能无限制打开很多的文件</p><p>查看最大限制命令  <code>ulimit -n</code></p><p><strong>被占用的012定义在哪里?</strong></p><p><code>在程序执行的时候，就会默认打开3个文件</code>，分别是&quot;标准输入&quot;、“标准输出”、“标准出错”，他们其实是一个宏定义来 的，是被定义在一个头文件中，头文件路径：/usr/include/unistd.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> STDIN_FILENO    0       <span class="comment">/* Standard input.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STDOUT_FILENO   1       <span class="comment">/* Standard output.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STDERR_FILENO   2       <span class="comment">/* Standard error output.  */</span></span></span><br></pre></td></tr></table></figure><h2 id="文件IO">文件IO</h2><h3 id="文件IO-标准IO">文件IO/标准IO</h3><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20240522093609761.png" alt="image-20240522093609761" style="zoom: 67%;" /><p>⭐<strong>标准IO是应用程序和库函数之间的接口，由C库提供，与操作系统无关，代码迁移简单</strong></p><p>⭐文件IO、又叫系统IO、系统调用，<strong>是库函数与操作系统之间的接口</strong>，接近底层，不同的OS的实现也不同，比如ubuntu这里是open，可能在其他操作系统里函数名不同且实现也不同。</p><p>⭐系统IO没有缓冲机制，标准IO有缓冲机制。</p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20240522093706298.png" alt="image-20240522093706298" style="zoom:67%;" /><p><strong>系统调用是什么？</strong></p><p>用户不能直接操作内核，所以在内核提供了接口供用户调用，这个就是系统调用。</p><p>文件IO就是系统调用。标准IO是再向上一层的封装，它在用户空间添加了缓冲区，就是在内存申请一块空间用来存放读写的数据，这也是为什么它有缓冲机制，而文件IO没有。</p><p><strong>为什么要搞两套？直接用系统IO不行吗？</strong></p><p>因为系统不同 linux，mac，windows，如果直接系统调用，移植代码就很麻烦。所以主流操作系统都实现了c库，而我们只需要调用c库就行，而不需要改很多代码。</p><h3 id="第一个读写程序">第一个读写程序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> fd1, fd2;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"><span class="type">int</span> ret;</span><br><span class="line">fd1 = open(<span class="string">&quot;data.txt&quot;</span>, O_RDONLY);</span><br><span class="line"><span class="keyword">if</span> (fd1 == <span class="number">-1</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;open data.txt&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fd2 = open(<span class="string">&quot;file.txt&quot;</span>, O_WRONLY | O_CREAT, <span class="number">0644</span>);</span><br><span class="line"><span class="keyword">if</span> (fd2 == <span class="number">-1</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;open file.txt&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret = read(fd1, buf, <span class="keyword">sizeof</span>(buf));</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">-1</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;read&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(buf);</span><br><span class="line"></span><br><span class="line">ret = write(fd2, buf, <span class="built_in">strlen</span>(buf));</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">-1</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;write&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(fd1);</span><br><span class="line">close(fd2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="man手册">man手册</h3><ul><li>man 1 ls 1表示Linux命令</li><li>man 2 open 2表示系统调用</li><li>man 3 printf 3 表示C库函数</li></ul><h3 id="系统IO-API">系统IO API</h3><h4 id="open">open</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">open</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *pathname, <span class="type">int</span> flags)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">open</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *pathname, <span class="type">int</span> flags, <span class="type">mode_t</span> mode)</span>;</span><br></pre></td></tr></table></figure><p>成功返回值是一个非负整数，也就是文件描述符，打开失败返回-1</p><p>pathname 指定要打开的文件</p><p>flags 指定要用什么模式去打开</p><blockquote><p>man手册原文</p><p>The  argument  flags must include one of the following  access  modes:  <strong>O_RDONLY,  O_WRONLY,   or O_RDWR</strong>.   These  request  opening  the file read-only, write-only, or read/write, respectively.</p></blockquote><p>可选参数</p><ol><li>O_TRUNC：如果文件存在并且是一个普通文件，而且打开方式是O_WRONLY/O_RDWR，那么这个文件就会被清空。</li><li>O_APPEND ：追加的方式打开，The  file is opened in append mode.</li><li>O_CREAT ：如果文件不存在则创建，If the file does not exist it will be created.</li><li>O_EXCL ：和O_CREAT一块使用，如果文件存在则报错</li><li>O_NONBLOCK ：非阻塞的方式打开文件</li></ol><p>这些参数一起使用时 用 位运算符<code>|</code>连接</p><p><strong>mode 指定文件权限，只有在需要创建文件时，也就是 flags指定了 O_CREAT 才有效</strong></p><p>换句话说，如果flags没有指定 O_CREAT，mode参数是无效的。</p><blockquote><p>The open() system call opens the file specified  by  pathname. If  the  specified file does not exist, it may optionally (if O_CREAT is specified in flags) be created  by open().</p></blockquote><p>四个八进制位指定，以0766为例</p><ul><li>0： 没有特殊权限</li><li>7： 文件所属用户 有 rwx权限  r：4 w：2 x：1</li><li>6： 同组用户 有 rw权限</li><li>6： 其他用户有 rw权限</li></ul><p>除了这种写法，还可以通过系统定义好的宏指定</p><ol><li><code>S_IRWXU  </code>00700 user (file owner) has read, write, and execute permission</li><li><code>S_IRUSR</code>00400 user has read permission</li><li><code>S_IWUSR  </code>00200 user has write permission</li><li><code>S_IXUSR  </code>00100 user has execute permission</li><li><code>S_IRWXG  </code>00070 group has read, write,  and execute permission</li><li><code>S_IRGRP  </code>00040 group has read permission</li><li><code>S_IWGRP  </code>00020 group has write permission</li><li><code>S_IXGRP  </code>00010  group  has execute permission</li><li><code>S_IRWXO  </code>00007 others  have  read,  write, and execute permission</li><li><code>S_IROTH  </code>00004 others have read permission</li><li><code>S_IWOTH  </code>00002  others  have write permission</li></ol><p>第一个0指八进制位，第二位指特殊权限值，第三位文件所属用户，第四位同组用户，第五位其他用户</p><p>不过一般用四位即可，表示四种权限</p><h4 id="read">read</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ssize_t</span> <span class="title function_">read</span><span class="params">(<span class="type">int</span> fd, <span class="type">void</span> *buf, <span class="type">size_t</span> count)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>read()  attempts to read up to count bytes from file descriptor fd into the buffer starting at buf.</p></blockquote><ol><li>成功返回读到的字节数 可能小于 count，失败返回-1，并且设置错误码errno</li><li>fd 文件描述符</li><li>buf 文件内容读到哪个缓冲区地址</li><li>count 要读多少字节</li></ol><p>errno 是 &lt;errno.h&gt; 中定义的变量，出现错误会被设置成2 成功就是0</p><h4 id="write">write</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ssize_t</span> <span class="title function_">write</span><span class="params">(<span class="type">int</span> fd, <span class="type">const</span> <span class="type">void</span> *buf, <span class="type">size_t</span> count)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>write()  writes  up to count bytes from the buffer starting at buf to the file referred to by the file descriptor fd.</p></blockquote><ol><li>成功返回写入的字节数 可能小于 count，失败返回-1，并且设置错误码errno</li><li>fd 文件描述符</li><li>buf 哪个缓冲区的内容写到文件中</li><li>count 要读多少字节</li></ol><h4 id="lseek">lseek</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">off_t</span> <span class="title function_">lseek</span><span class="params">(<span class="type">int</span> fd, <span class="type">off_t</span> offset, <span class="type">int</span> whence)</span>;</span><br></pre></td></tr></table></figure><p>作用：移动文件指针</p><ol><li>成功返回当前位置，失败返回-1 并且设置错误码 errno</li><li>fd  文件描述符</li><li>whence 偏移参考点<ol><li>SEEK_SET 文件起始位置</li><li>SEEK_CUR 当前位置</li><li>SEEK_END 文件末尾</li></ol></li><li>offset 相对于 whence的偏移量</li></ol><p>flags 为 O_APPEND时，因为是追加，文件指针直接从文件末尾开始</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> fd1;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"><span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">fd1 = open(<span class="string">&quot;./file.txt&quot;</span>, O_RDWR | O_CREAT, <span class="number">00644</span>);</span><br><span class="line"><span class="keyword">if</span> (fd1 == <span class="number">-1</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;open file.txt&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret = write(fd1, <span class="string">&quot;hello world\n&quot;</span>, <span class="number">12</span>);</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">-1</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;write file.txt&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lseek(fd1, <span class="number">0</span>, SEEK_SET);</span><br><span class="line">ret = read(fd1, buf, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ret = %d\n&quot;</span>, ret);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ret = write(fd1, <span class="string">&quot;123&quot;</span>, <span class="number">3</span>);</span><br><span class="line">lseek(fd1, <span class="number">-2</span>, SEEK_END);</span><br><span class="line">ret = write(fd1, <span class="string">&quot;45&quot;</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">puts</span>(buf);</span><br><span class="line"></span><br><span class="line">close(fd1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>lseek函数不仅可以用来调整当前文件偏移量，而且还可以将文件位置偏移到文件之外，形成一个 空洞，这种特性其实是非常重要的，它提供了可以在不同地方同时写一个文件的可能，对于一个较大的 文件我们可以在文件中定位到一个指定的地方，让多个进程同时在不同的偏移量处写入文件数据。相当 于网络中的多点下载。</p></blockquote><h3 id="文件管理">文件管理</h3><p>文件储存在硬盘上，硬盘的最小存储单位叫做“扇区”（Sector），每个扇区储存512字节（相当于 0.5KB）， 操作系统读取硬盘的时候，不会一个个扇区地读取，这样效率太低，而是一次性连续读取多 个扇区，即一次 性读取一个“块”（block）。这种由多个扇区组成的“块”，是文件存取的最小单位。“块”的 大小，最常 见的是4KB，即连续八个sector组成一个block。</p><p>磁盘在进行分区、格式化的时候会将其分为两个区域，一个是数据区，用于存储文件中的数据； 另一个 是inode区，用于存放inode table（inode表）</p><p><strong>每一个文件都必须对应一个inode，inode实质上是 一个结构体，这个结构体是通过inode编码在inode表中找到的，这个结构体记录了文件了不同信息</strong>，譬如文件字节大小、文件所有者、文件对应的读/写/执行权限、文件时间戳（创建时间、更新时间等）、文件类型、文件数据 存储的block（块） 位置等等信息</p><p>Linux中可以通过 <code>ls -il</code> 和 <code>stat</code>命令查看 inode编号</p><p><strong>打开文件这个过程中做了什么？</strong></p><p>在Linux 系统中，内核会为每个进程设置一个专门的数据结构用于管理该进程，用来记录进程的状态信息、运行特征等，我们把这个称为进程控制块（Process control block，缩写 PCB）。</p><p>PCB 数据结构体中有一个指针指向了文件描述符表（File descriptors），文件描述符表中的每一个文件描述符fd索引到对应的文件表（File table），文件表也是一个数据结构体，其中记录了很多文件相关的信息，譬 如文 件状态标志、引用计数、当前文件的读写偏移量以及i-node指针（指向该文件对应的inode）</p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20240523083213985.png" alt="image-20240523083213985" style="zoom: 50%;" /><h2 id="标准IO">标准IO</h2><h3 id="标准IO介绍">标准IO介绍</h3><p>标准IO是文件IO的又一层封装。</p><p>文件IO是系统调用，不同操作系统实现不同，标准IO是标准C库实现，不同操作系统实现也是相同的，所以代码移植容易。</p><p>性能上，标准IO引入了缓冲机制，在用户空间中定义了stdio缓冲区，性能优于文件IO</p><h3 id="file指针">file指针</h3><p>相当于 文件IO中的文件描述符，实际上这两个也是可以互相转换的，由库函数实现</p><p><code>FILE *fp</code>中的FILE就是一个结构体。 FILE 是一个结构体数据类型，它包含了标准I/O库函数为管理文件所需要的所有信息，包括用于实 际 I/O 的文件描述符、指向文件缓冲区的指针、缓冲区的长度、当前缓冲区中的字节数以及出错标志等。FILE 数据结构定义在标准I/O库函数头文件stdio.h中。</p><h3 id="标准IO-API">标准IO API</h3><h4 id="fwrite-fread">fwrite / fread</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">size_t</span> <span class="title function_">fread</span><span class="params">(<span class="type">void</span> *ptr, <span class="type">size_t</span> size, <span class="type">size_t</span> nmemb, FILE *stream)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">fwrite</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *ptr, <span class="type">size_t</span> size, <span class="type">size_t</span> nmemb, FILE *stream)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>The  function  fread()  reads nmemb items of data, each size bytes long, from the stream pointed to by stream, storing them at the location given by ptr.</p><p>The  function fwrite() writes nmemb items of data, each size bytes long, to the stream pointed to by stream, obtaining  them  from  the  location given by ptr.</p><p>On  success,  fread()  and  fwrite()  return the number of items read or written.  This number equals the number of bytes transferred  only  when size  is  1.  If an error occurs, or the end of the file is reached, the return value is a short item count (or zero).</p><p>fread()  does not distinguish between end-of-file and error, and callers must use feof(3) and ferror(3) to determine which occurred.</p><p>后面有 feof和ferror 1</p></blockquote><ul><li>size参数表示 每块多少字节</li><li>nmemb 表示 这次读写 多少块</li></ul><h4 id="fopen">fopen</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FILE *<span class="title function_">fopen</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *pathname, <span class="type">const</span> <span class="type">char</span> *mode)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用来 将文件描述符转为FILE指针 就可以使用标准IO的方法</span></span><br><span class="line">FILE *<span class="title function_">fdopen</span><span class="params">(<span class="type">int</span> fd, <span class="type">const</span> <span class="type">char</span> *mode)</span>;</span><br></pre></td></tr></table></figure><p><strong>fopen mode参数和 open mode参数 的对应关系</strong></p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20240523145030310.png" alt="image-20240523145030310" style="zoom: 80%;" /><h4 id="feof-ferror">feof / ferror</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">clearerr</span><span class="params">(FILE *stream)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">feof</span><span class="params">(FILE *stream)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ferror</span><span class="params">(FILE *stream)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>The function clearerr() clears the end-of-file and error indicators for the stream pointed to by stream.</p><p>The  function  feof()  tests  the  end-of-file indicator for the stream pointed to by stream, <strong>returning nonzero  if  it  is  set.</strong> The  end-of-file  indicator  can be cleared only by the function clearerr().</p><p>The function ferror() tests the error indicator for  the  stream  pointed to by stream, returning nonzero if it is set.  The error indicator can be reset only by the clearerr() function.</p></blockquote><p>读到文件结尾,<code>end-of-file</code>标识会被设置，这是一种错误情况。</p><p>当出现IO错误时（不是读到文件末尾，可能是各种错误），错误标识被设置，这是另一种错误情况。</p><p>想区分这两种情况，根据不同情况做出不同的处理，就要使用 feof和ferror</p><p>clearerr()作用是清空 <code>end-of-file</code>标识和 <code>error</code>标识 （就是error.h中定义的errno标识）</p><h4 id="文件指针定位">文件指针定位</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fseek</span><span class="params">(FILE *stream, <span class="type">long</span> offset, <span class="type">int</span> whence)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="title function_">ftell</span><span class="params">(FILE *stream)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">rewind</span><span class="params">(FILE *stream)</span>;</span><br></pre></td></tr></table></figure><ul><li>fseek 与系统调用 lseek 基本一样</li><li>ftell 返回当前文件指针位置</li><li>rewind 将文件指针移动到文件首部</li></ul><p><strong>代码案例</strong></p><ul><li><p>案例一（读写）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span> &#123;</span><br><span class="line"></span><br><span class="line">FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">1024</span>] = <span class="string">&quot;hello world nihao shijie`&quot;</span>;</span><br><span class="line"><span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">fp = fopen(<span class="string">&quot;file&quot;</span>, <span class="string">&quot;r+&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;fopen error&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret = fwrite(buf, <span class="number">1</span>, <span class="built_in">strlen</span>(buf) + <span class="number">1</span>, fp);</span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="built_in">strlen</span>(buf) + <span class="number">1</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;write error&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// fseek(fp, 0, SEEK_SET);</span></span><br><span class="line">rewind(fp);</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> buf1[<span class="number">1024</span>];</span><br><span class="line">ret = fread(buf1, <span class="number">1</span>, <span class="built_in">strlen</span>(buf) + <span class="number">1</span>, fp);</span><br><span class="line"><span class="built_in">puts</span>(buf1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算文件大小</span></span><br><span class="line">fseek(fp, <span class="number">0</span>, SEEK_END);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;file size: %ld\n&quot;</span>, ftell(fp));</span><br><span class="line"></span><br><span class="line">fclose(fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>案例二（错误处理）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span> &#123;</span><br><span class="line"></span><br><span class="line">FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">int</span> ret;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((fp = fopen(<span class="string">&quot;file&quot;</span>, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;fopen&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fseek(fp, <span class="number">0</span>, SEEK_END);</span><br><span class="line"><span class="keyword">if</span> ((ret = fread(buf, <span class="number">1</span>, <span class="number">12</span>, fp)) &lt; <span class="number">12</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (feof(fp)) &#123;</span><br><span class="line">perror(<span class="string">&quot;到达末尾&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">clearerr(fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!feof(fp)) &#123;</span><br><span class="line">perror(<span class="string">&quot;clearerror&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ferror(fp)) &#123;</span><br><span class="line">perror(<span class="string">&quot;IO错误&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">puts</span>(buf);</span><br><span class="line">    </span><br><span class="line">    fclose(fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="格式化输出">格式化输出</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">printf</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *format, ...)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">fprintf</span><span class="params">(FILE *stream, <span class="type">const</span> <span class="type">char</span> *format, ...)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">dprintf</span><span class="params">(<span class="type">int</span> fd, <span class="type">const</span> <span class="type">char</span> *format, ...)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sprintf</span><span class="params">(<span class="type">char</span> *str, <span class="type">const</span> <span class="type">char</span> *format, ...)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">snprintf</span><span class="params">(<span class="type">char</span> *str, <span class="type">size_t</span> size, <span class="type">const</span> <span class="type">char</span> *format, ...)</span>;</span><br></pre></td></tr></table></figure><p><strong>函数说明</strong></p><blockquote><p>The functions in the printf() family produce output according to a  format  as  described  below.   The  functions  <strong>printf()  and write  output  to stdout, the standard output stream; fprintf() and write  output  to  the  given  output  stream; sprintf(), snprintf() write to the character string str.</strong></p><p>The function dprintf() is the same as fprintf() except  that  it outputs to <strong>a file descriptor, fd, instead of to a stdio stream.</strong></p><p>The  functions  snprintf()  write at most size bytes (including the terminating null byte (‘\0’)) to str.</p></blockquote><p>printf 相当于 stream == stdout 的fprintf</p><p><strong>案例：按格式打印当前时间</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">time_t</span> rawtime;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> *<span class="title">timeinfo</span>;</span></span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">24</span>]; <span class="comment">// 保证有足够的空间存放格式化后的时间字符串</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前时间</span></span><br><span class="line">    time(&amp;rawtime);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将时间转换为本地时区的tm结构体</span></span><br><span class="line">    timeinfo = localtime(&amp;rawtime);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 snprintf进行时间格式化</span></span><br><span class="line"><span class="built_in">snprintf</span>(buffer, <span class="keyword">sizeof</span>(buffer), <span class="string">&quot;%d-%d-%d %d:%d:%d&quot;</span>, timeinfo-&gt;tm_year + <span class="number">1900</span>, timeinfo-&gt;tm_mon + <span class="number">1</span>, timeinfo-&gt;tm_mday, timeinfo-&gt;tm_hour, timeinfo-&gt;tm_min, timeinfo-&gt;tm_sec);</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 0</span></span><br><span class="line">    <span class="comment">// 使用strftime进行时间格式化</span></span><br><span class="line">    <span class="keyword">if</span> (strftime(buffer, <span class="keyword">sizeof</span>(buffer), <span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>, timeinfo) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;时间格式化失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    <span class="comment">// 输出格式化后的时间</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前时间是: %s\n&quot;</span>, buffer);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="IO缓冲">IO缓冲</h4><p>标准IO在用户空间引入缓冲区，又叫stdio缓冲区，文件IO没有，如下图</p><img src="C:\Users\13798\Downloads\嵌入式-第 2 页.drawio.png" alt="嵌入式-第 2 页.drawio" style="zoom: 67%;" /><h5 id="内核缓冲区">内核缓冲区</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fsync</span><span class="params">(<span class="type">int</span> fd)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fdatasync</span><span class="params">(<span class="type">int</span> fd)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sync</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure><ul><li>fsync将参数fd所指的文件内容数据和元数据写入磁盘，对磁盘设备的写操作完成后，才会返回。调 用成功返回0，错误返回-1并设置errno指示错误原因。</li><li>fdatasync只是写入内容数据，不包括元数据（记录文件属性相关的数据信息）。</li><li>sync()会将所有文件I/O内核缓冲区中的文件内容数据和元数据全部更新到磁盘设备中，刷新所有文 件I/O内核缓冲区。</li></ul><p>除了手动调用函数刷新内核缓冲区，还可以在打开文件时，通过指定系统调用open方法中的flags参数实现每次读写操作后刷新内核缓冲区</p><ul><li>O_DSYNC  每个write调用后将数据同步，类似于fdatasync</li><li>O_SYNC 类似于 fsync</li></ul><h5 id="stdio缓冲区">stdio缓冲区</h5><p>标准I/O所维护的stdio缓冲是用户空间 的缓 冲区，当应用程序中通过标准I/O操作磁盘文件时，<strong>为了减少调用系统调用的次数</strong>，标准I/O函数会<strong>将用户写入或读取文件的数据缓存在stdio 缓冲区</strong>，然后再一次性将 stdio 缓冲区中缓存的数据<strong>通过调用系统调用I/O（文件I/O）写入到文件I/O内核缓冲区</strong>或者拷贝到应用程序的buf中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">setvbuf</span><span class="params">(FILE *stream, <span class="type">char</span> *buf, <span class="type">int</span> mode, <span class="type">size_t</span> size)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setbuf</span><span class="params">(FILE *stream, <span class="type">char</span> *buf)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setbuffer</span><span class="params">(FILE *stream, <span class="type">char</span> *buf, <span class="type">size_t</span> size)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setlinebuf</span><span class="params">(FILE *stream)</span>;</span><br></pre></td></tr></table></figure><p><strong>函数说明</strong></p><blockquote><p>The  setvbuf() function may be used on any open stream to change its buffer.  The mode argument must  be  one  of  the  following three macros:</p><p>_IONBF unbuffered 无缓冲</p><p>_IOLBF line buffered 行缓冲</p><p>_IOFBF fully buffered 全缓冲</p><p>Except  for unbuffered files, the buf argument should point to a buffer at least size bytes long; this buffer will  be  used  instead  of the current buffer.  If the argument buf is NULL, only the mode is affected; a new buffer will be allocated on the next read  or  write  operation.  就是说如果buf不是NULL，那么buf就是缓冲区，如果buf不是NULL，系统自动分配一块空间作为缓冲区</p><p>The  setbuffer()  function  is the same, except that the size of the buffer is up to the caller, rather than being determined  by  the default BUFSIZ.  The setlinebuf() function is exactly equivalent to the call:</p><p><code>setvbuf(stream, NULL, _IOLBF, 0);</code></p></blockquote><p><strong>案例：标准IO缓冲测试</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BUF_SIZE 4096</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> READ_FILE <span class="string">&quot;./file&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WRITE_FILE <span class="string">&quot;./wfile&quot;</span></span></span><br><span class="line"><span class="type">static</span> <span class="type">char</span> buf[BUF_SIZE];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// setvbuf(stdout, NULL, _IONBF, 0);</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line"></span><br><span class="line">sleep(<span class="number">1</span>);</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 0</span></span><br><span class="line"><span class="type">int</span> rfd, wfd;</span><br><span class="line"><span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">rfd = open(READ_FILE, O_RDONLY);</span><br><span class="line">wfd = open(WRITE_FILE, O_WRONLY | O_CREAT | O_TRUNC, <span class="number">0644</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ((size = read(rfd, buf, BUF_SIZE)) &gt; <span class="number">0</span>)</span><br><span class="line">write(wfd, buf, size);</span><br><span class="line"></span><br><span class="line"><span class="built_in">puts</span>(buf);</span><br><span class="line"></span><br><span class="line">fsync(wfd);</span><br><span class="line"></span><br><span class="line">close(rfd);</span><br><span class="line">close(wfd);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结下刷新stdio缓冲区的方法</p><ul><li>换行符刷新缓冲区（行缓冲）</li><li>调用fflush()</li><li>调用fclose()关闭文件</li><li>程序退出时</li></ul><img src="C:\Users\13798\AppData\Roaming\Typora\typora-user-images\image-20240523182523202.png" alt="image-20240523182523202" style="zoom:67%;" />]]></content>
      
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell编程</title>
      <link href="/2024/05/10/C%E8%AF%AD%E8%A8%80/shell/"/>
      <url>/2024/05/10/C%E8%AF%AD%E8%A8%80/shell/</url>
      
        <content type="html"><![CDATA[<h4 id="第一个shell-echo-sh">第一个shell: <a href="http://echo.sh">echo.sh</a></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim echo.sh</span><br></pre></td></tr></table></figure><p><a href="http://echo.sh">echo.sh</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo &quot;hello world&quot;</span><br><span class="line">echo -n &quot;hello world&quot;</span><br><span class="line">echo -e &quot;hello\n world&quot;</span><br><span class="line"></span><br><span class="line">echo -e &quot;\033[30m 黑色字 \033[0m&quot;</span><br><span class="line">echo -e &quot;\033[31m 红色字 \033[0m&quot;</span><br></pre></td></tr></table></figure><ul><li><code>#!/bin/bash</code> 必须有 用来说明用什么 bash解析</li><li>-n 不换行-e 激活转义字符</li><li>彩色字 用的是 ASCII 控制码</li></ul><p>修改权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod +x echo.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者</span></span><br><span class="line">chmod 755 echo.sh</span><br></pre></td></tr></table></figure><p>执行shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./echo.sh</span><br><span class="line"></span><br><span class="line">sh ./echo.sh</span><br></pre></td></tr></table></figure><h4 id="变量">变量</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> adachi shimamura;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;var&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> `<span class="built_in">ls</span> /etc/apt`;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;var&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>反引号可以识别命令</p><h4 id="字符串">字符串</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">skill=<span class="string">&#x27;Java&#x27;</span></span><br><span class="line">str=<span class="string">&#x27;I am good at $skill&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$str</span></span><br><span class="line"></span><br><span class="line">str=<span class="string">&quot;I am good at <span class="variable">$skill</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$str</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;str:3&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;str:3:2&#125;</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> index <span class="string">&quot;<span class="variable">$str</span>&quot;</span> am`</span><br><span class="line"><span class="built_in">expr</span> index <span class="string">&quot;<span class="variable">$str</span>&quot;</span> am</span><br><span class="line"></span><br><span class="line">skill=<span class="string">&#x27;Java&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;skill&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#skill&#125;</span></span><br><span class="line"><span class="built_in">expr</span> length <span class="variable">$skill</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>单引号识别不了变量，双引号可以</p><p>expr 运算工具，也有其他，比如<code>(( var++ ))</code></p><h4 id="传递参数">传递参数</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#!/bin/bash</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;Shell 传递参数实例！&quot;</span>;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;执行的文件名：<span class="variable">$0</span>&quot;</span>;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;第一个参数为：<span class="variable">$1</span>&quot;</span>;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;第二个参数为：<span class="variable">$2</span>&quot;</span>;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;第三个参数为：<span class="variable">$3</span>&quot;</span>;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;参数个数：<span class="variable">$#</span>&quot;</span>;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;\$@：<span class="variable">$@</span>&quot;</span>;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;\$*：$*&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-- \$@ 演示 ---&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-- \$* 演示 ---&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;$*&quot;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">: <span class="string">&#x27;</span></span><br><span class="line"><span class="string">for file in $(ls /etc); do</span></span><br><span class="line"><span class="string">echo $file</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="read">read</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">: <span class="string">&#x27;</span></span><br><span class="line"><span class="string"># echo -n &quot;enter your name: &quot;</span></span><br><span class="line"><span class="string"># read name</span></span><br><span class="line"><span class="string">read -p &quot;enter your name: &quot; name</span></span><br><span class="line"><span class="string">echo &quot;hello $name!&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">read -p &quot;enter your age: &quot; age</span></span><br><span class="line"><span class="string">if [ $age -gt 18 ]; then</span></span><br><span class="line"><span class="string">echo &quot; &gt; 18 &quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">echo &quot; &lt; 18 &quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$line</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span> &lt; param.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>加上 -p 可以直接在后面跟变量，读文件一行行读</p><h4 id="算数运算">算数运算</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=4</span><br><span class="line">b=20</span><br><span class="line"></span><br><span class="line"><span class="comment">#加法运算</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> + <span class="variable">$b</span>`</span><br><span class="line"><span class="built_in">echo</span> $[a + b]</span><br><span class="line"></span><br><span class="line"><span class="comment">#减法运算</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> - <span class="variable">$b</span>`</span><br><span class="line"><span class="built_in">echo</span> $[a - b]</span><br><span class="line"></span><br><span class="line"><span class="comment">#乘法运算，注意*号前面需要反斜杠</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \* <span class="variable">$b</span>`</span><br><span class="line"><span class="built_in">echo</span> $[a * b]</span><br><span class="line"></span><br><span class="line"><span class="comment">#除法运算</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> / <span class="variable">$b</span>`</span><br><span class="line"><span class="built_in">echo</span> $[a / b]</span><br><span class="line"></span><br><span class="line"><span class="comment">#let</span></span><br><span class="line"><span class="built_in">let</span> a=5</span><br><span class="line"><span class="built_in">let</span> a+=2</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>反引号识别命令</li><li>$[  ] / let 可以直接计算 不用 expr</li></ul><h4 id="目录操作">目录操作</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">FILE_PATH=<span class="string">&quot;/home/ubuntu/test/math.sh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(<span class="built_in">dirname</span> <span class="variable">$FILE_PATH</span>)</span><br><span class="line"><span class="built_in">echo</span> $(<span class="built_in">basename</span> <span class="variable">$FILE_PATH</span>)</span><br><span class="line"><span class="built_in">echo</span> $(<span class="built_in">realpath</span> <span class="variable">$FILE_PATH</span>)</span><br><span class="line"><span class="built_in">echo</span> $(<span class="built_in">pwd</span> <span class="variable">$FILE_PATH</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用 反引号也可以</p><h4 id="流程控制">流程控制</h4><h5 id="if">if</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=20</span><br><span class="line">b=10</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 需求1: 判断 a 是否 100</span></span><br><span class="line"> <span class="keyword">if</span> [ <span class="variable">$a</span> -gt 100 ]; <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 大于 100&quot;</span></span><br><span class="line"> <span class="keyword">elif</span> [ <span class="variable">$a</span> -gt 20 ]; <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 大于 20&quot;</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 小于等于 20&quot;</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 需求2: 判断 a 是否等于 b</span></span><br><span class="line"> <span class="keyword">if</span> [ <span class="variable">$a</span> -eq <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 等于 <span class="variable">$b</span>&quot;</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 不等于 <span class="variable">$b</span>&quot;</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 需求3: 判断 a 与 b 比较</span></span><br><span class="line"> <span class="keyword">if</span> [ <span class="variable">$a</span> -lt <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 小于 <span class="variable">$b</span>&quot;</span></span><br><span class="line"> <span class="keyword">elif</span> [ <span class="variable">$a</span> -eq <span class="variable">$b</span> ]; <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 等于 <span class="variable">$b</span>&quot;</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> 大于 <span class="variable">$b</span>&quot;</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 需求4: 判断 (a + 10) 和 (b * b) 比较大小</span></span><br><span class="line"> <span class="keyword">if</span> <span class="built_in">test</span>  $[ a + 10 ] -gt $[ b * b ]; <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;(a+10): $[ a + 10 ]  大于 (b * b): $[ b * b ]&quot;</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;(a+10): $[ a + 10 ]  小于等于 (b * b): $[ b * b ]&quot;</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>条件表达式 [] 两边必须有空格 检查很严格</p><p>如果需要进行计算  比如需求4 要加 test</p><h5 id="for">for</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历 1 - 5</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> 1 2 3 4 5; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$n</span> &quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历 1 - 100</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> &#123;1..100&#125;; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$n</span> &quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历 1 - 100 奇数</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> &#123;1..100..2&#125;; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$n</span> &quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历 根目录 下的内容</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `<span class="built_in">ls</span> ./`; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="while">while</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">: <span class="string">&#x27;</span></span><br><span class="line"><span class="string">i=0</span></span><br><span class="line"><span class="string">sum=0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while [ $i -le 100 ]; do</span></span><br><span class="line"><span class="string">sum=$[ sum + i ]</span></span><br><span class="line"><span class="string">i=$[ i + 1 ]</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &quot;sum = $sum&quot;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"></span><br><span class="line">: <span class="string">&#x27;</span></span><br><span class="line"><span class="string">i=0</span></span><br><span class="line"><span class="string">sum=0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while [ $i -le 100 ]; do</span></span><br><span class="line"><span class="string">let sum+=i</span></span><br><span class="line"><span class="string">let i++</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &quot;sum = $sum&quot;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line">: <span class="string">&#x27;  这个是块注释</span></span><br><span class="line"><span class="string">i=0</span></span><br><span class="line"><span class="string">sum=0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while [ $i -le 99 ]; do</span></span><br><span class="line"><span class="string">(( sum += i ))</span></span><br><span class="line"><span class="string">(( i++ ))</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &quot;sum = $sum&quot;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line"><span class="comment">#date</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">date</span>`</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h5 id="switch">switch</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">: <span class="string">&#x27;</span></span><br><span class="line"><span class="string">while true; do</span></span><br><span class="line"><span class="string">read -p &quot;输入 1 到 4 之间的数字(q to quit): &quot; aNum</span></span><br><span class="line"><span class="string">case $aNum in</span></span><br><span class="line"><span class="string">1)  echo &#x27;</span>你选择了 1<span class="string">&#x27;</span></span><br><span class="line"><span class="string">;;</span></span><br><span class="line"><span class="string">2)  echo &#x27;</span>你选择了 2<span class="string">&#x27;</span></span><br><span class="line"><span class="string">;;</span></span><br><span class="line"><span class="string">3)  echo &#x27;</span>你选择了 3<span class="string">&#x27;</span></span><br><span class="line"><span class="string">;;</span></span><br><span class="line"><span class="string">4)  echo &#x27;</span>你选择了 4<span class="string">&#x27;</span></span><br><span class="line"><span class="string">;;</span></span><br><span class="line"><span class="string">q)  break</span></span><br><span class="line"><span class="string">;;</span></span><br><span class="line"><span class="string">*)  echo &#x27;</span>你没有输入 1 到 4 之间的数字<span class="string">&#x27;</span></span><br><span class="line"><span class="string">;;</span></span><br><span class="line"><span class="string">esac</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"></span><br><span class="line">: <span class="string">&#x27;</span></span><br><span class="line"><span class="string"> # 需求: 执行死循环 每隔1秒打印当前时间, 执行10次停止</span></span><br><span class="line"><span class="string"> i=0;</span></span><br><span class="line"><span class="string"> while true; do</span></span><br><span class="line"><span class="string"> sleep 1</span></span><br><span class="line"><span class="string"> echo $i `date +&quot;%Y-%m-%d %H:%M:%S&quot;`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> (( i++ ))</span></span><br><span class="line"><span class="string"> if [ $i -eq 10 ]; then</span></span><br><span class="line"><span class="string"> break</span></span><br><span class="line"><span class="string"> fi</span></span><br><span class="line"><span class="string"> done</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需求: 打印 1 - 30 忽略 3 的倍数</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> &#123;1..30&#125;; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> $[ n % 3 ] -eq 0; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">continue</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$n</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="函数间调用">函数间调用</h4><p><a href="http://StringUtils.sh">StringUtils.sh</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stringcopy</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;string copy&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="http://main.sh">main.sh</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> StringUtils.sh</span><br><span class="line"></span><br><span class="line">stringcopy</span><br></pre></td></tr></table></figure><h4 id="数组">数组</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">my_array=(A B <span class="string">&quot;C&quot;</span> D)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个元素为: <span class="variable">$&#123;my_array[0]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第二个元素为: <span class="variable">$&#123;my_array[1]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第三个元素为: <span class="variable">$&#123;my_array[2]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第四个元素为: <span class="variable">$&#123;my_array[3]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;数组的元素为: <span class="variable">$&#123;my_array[*]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;数组的元素为: <span class="variable">$&#123;my_array[@]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;数组元素个数为: <span class="variable">$&#123;#my_array[*]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;数组元素个数为: <span class="variable">$&#123;#my_array[@]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历数组</span></span><br><span class="line"><span class="comment"># 方式一</span></span><br><span class="line"><span class="keyword">for</span> ele <span class="keyword">in</span> <span class="variable">$&#123;my_array[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ele</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line"><span class="keyword">for</span> ((i = 0; i &lt; <span class="variable">$&#123;#my_array[@]&#125;</span>; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;my_array[$i]&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在有一个需求，在一个脚本中定义数组，在另一个脚本中遍历</p><p><a href="http://defineArr.sh">defineArr.sh</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">arr=(Java C++ JavaScript Shell)</span><br></pre></td></tr></table></figure><p><a href="http://main.sh">main.sh</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> test1.sh</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="variable">$&#123;arr[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$e</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="菜单案例">菜单案例</h4><p>工具脚本 func_tool.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">backup</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;backup&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">copy</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;copy&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">quit</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;quit&quot;</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">other</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;enter again&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="http://menu.sh">menu.sh</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> func_tool.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string"> **************</span></span><br><span class="line"><span class="string"> ** 1.backup **</span></span><br><span class="line"><span class="string"> ** 2.copy   **</span></span><br><span class="line"><span class="string"> ** 3.quit   **</span></span><br><span class="line"><span class="string"> **************</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;enter your choice: &quot;</span> op</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$op</span> <span class="keyword">in</span></span><br><span class="line">1|backup)</span><br><span class="line">backup</span><br><span class="line">;;</span><br><span class="line">2|copy)</span><br><span class="line">copy</span><br><span class="line">;;</span><br><span class="line">3|quit)</span><br><span class="line">quit</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">other</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="正则-regex">正则 regex</h4><p>data.txt</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kimi:<span class="number">18</span>:female</span><br><span class="line">adachi:<span class="number">20</span>:female</span><br><span class="line">shimamura:<span class="number">20</span>:female</span><br></pre></td></tr></table></figure><p>用 cut、sed、awk命令 处理文件</p><h5 id="cut-命令">cut 命令</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cut</span> -d <span class="string">&#x27;:&#x27;</span> -f2,3 data.txt</span><br></pre></td></tr></table></figure><p>获取 第二列和第三列</p><h5 id="sed">sed</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/male/female/g&#x27;</span> data.txt</span><br></pre></td></tr></table></figure><p>全局替换 male 改成 female</p><h5 id="awk">awk</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -v FS=<span class="string">&#x27;:&#x27;</span> -v OFS=<span class="string">&#x27;---&#x27;</span> <span class="string">&#x27;&#123;print $1,$2,$3&#125;&#x27;</span> data.txt</span><br></pre></td></tr></table></figure><h5 id="grep">grep</h5>]]></content>
      
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Makefile</title>
      <link href="/2024/04/25/C%E8%AF%AD%E8%A8%80/Makefile/"/>
      <url>/2024/04/25/C%E8%AF%AD%E8%A8%80/Makefile/</url>
      
        <content type="html"><![CDATA[<h4 id="makefile-三要素">makefile 三要素</h4><ul><li>目标</li><li>依赖（先决条件）</li><li>命令（TAB键）</li></ul><h4 id="makefile版本一">makefile版本一</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">main: main.o cal.o input.o</span></span><br><span class="line">gcc -o main main.o cal.o input.o</span><br><span class="line"></span><br><span class="line"><span class="section">main.o: main.c</span></span><br><span class="line">gcc -c main.c</span><br><span class="line"></span><br><span class="line"><span class="section">cal.o:: cal.c</span></span><br><span class="line">gcc -c cal.c</span><br><span class="line"></span><br><span class="line"><span class="section">input.o:: input.c</span></span><br><span class="line">gcc -c input.c</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">rm -f *.o main</span><br></pre></td></tr></table></figure><h4 id="版本二">版本二</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean # 伪对象</span></span><br><span class="line"></span><br><span class="line"><span class="section">main: main.o cal.o input.o</span></span><br><span class="line">gcc -o <span class="variable">$@</span> <span class="variable">$^</span></span><br><span class="line"></span><br><span class="line"><span class="section">%.o: %.c</span></span><br><span class="line">gcc -c <span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">rm -f *.o main</span><br></pre></td></tr></table></figure><blockquote><p>伪对象解决的问题：如果项目下出现 同名文件clean  这时候 make clean命令就会失效 因为make把 clean当成了文件</p><p>$@:  每条规则中的 目标 也就是冒号前</p><p>$^: 每条规则中的 依赖（先决条件）所有参数 也就是冒号后</p><p>$&lt;: 每条规则中的 依赖的第一个参数</p></blockquote><h4 id="版本三">版本三</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean # 伪对象</span></span><br><span class="line"></span><br><span class="line">CC=gcc</span><br><span class="line">EXE=main</span><br><span class="line">OBJS=main.o cal.o input.o</span><br><span class="line">RM=rm -f</span><br><span class="line"></span><br><span class="line"><span class="variable">$(EXE)</span>: <span class="variable">$(OBJS)</span></span><br><span class="line"><span class="variable">$(CC)</span> -o <span class="variable">$@</span> <span class="variable">$^</span></span><br><span class="line"></span><br><span class="line"><span class="section">%.o: %.c</span></span><br><span class="line"><span class="variable">$(CC)</span> -c <span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line"><span class="variable">$(RM)</span> <span class="variable">$(OBJS)</span> <span class="variable">$(EXE)</span></span><br></pre></td></tr></table></figure><p>自定义变量，这样项目文件发生变化时只需要修改变量值</p><h4 id="版本四">版本四</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean # 伪对象</span></span><br><span class="line"></span><br><span class="line">CC=gcc</span><br><span class="line">EXE=main</span><br><span class="line">SRCS=<span class="variable">$(<span class="built_in">wildcard</span> *.c)</span></span><br><span class="line">OBJS=<span class="variable">$(<span class="built_in">patsubst</span> %.c,%.o,<span class="variable">$(SRCS)</span>)</span></span><br><span class="line">RM=rm -f</span><br><span class="line"></span><br><span class="line"><span class="variable">$(EXE)</span>: <span class="variable">$(OBJS)</span></span><br><span class="line"><span class="variable">$(CC)</span> -o <span class="variable">$@</span> <span class="variable">$^</span></span><br><span class="line"></span><br><span class="line"><span class="section">%.o: %.c</span></span><br><span class="line"><span class="variable">$(CC)</span> -c <span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line"><span class="variable">$(RM)</span> <span class="variable">$(OBJS)</span> <span class="variable">$(EXE)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">print:</span></span><br><span class="line">@echo <span class="variable">$(SRCS)</span></span><br><span class="line">@echo <span class="variable">$(OBJS)</span></span><br></pre></td></tr></table></figure><p>使用函数 wildcard(通配符) patsubst(字符串替换)</p><p>如果项目添加了 test.c，版本三还需要在变量后添加 test.o，但是在这个版本就不用再添加</p><p>可以添加自定义命令，比如上面的print 打印SRCS OBJS查看目标和源文件寻找替换的是否正确，注意用 patsubst替换时 用的是 %.c 不是 *.c</p><h4 id="函数">函数</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean # 伪对象</span></span><br><span class="line"></span><br><span class="line">CC=gcc</span><br><span class="line">EXE=main</span><br><span class="line">SRCS=<span class="variable">$(<span class="built_in">wildcard</span> *.c)</span></span><br><span class="line">OBJS=<span class="variable">$(<span class="built_in">patsubst</span> %.c,%.o,<span class="variable">$(SRCS)</span>)</span></span><br><span class="line">RM=rm -f</span><br><span class="line"></span><br><span class="line">FILTER_SRCS=<span class="variable">$(<span class="built_in">filter</span> main%.c,<span class="variable">$(SRCS)</span>)</span></span><br><span class="line">FILTER_OUT_SRCS=<span class="variable">$(<span class="built_in">filter</span>-out main%.c,<span class="variable">$(SRCS)</span>)</span></span><br><span class="line">ADD_PREFIX_SRCS=<span class="variable">$(<span class="built_in">addprefix</span> src/,<span class="variable">$(SRCS)</span>)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$(EXE)</span>: <span class="variable">$(OBJS)</span></span><br><span class="line"><span class="variable">$(CC)</span> -o <span class="variable">$@</span> <span class="variable">$^</span></span><br><span class="line"></span><br><span class="line"><span class="section">%.o: %.c</span></span><br><span class="line"><span class="variable">$(CC)</span> -c <span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line"><span class="variable">$(RM)</span> <span class="variable">$(OBJS)</span> <span class="variable">$(EXE)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">print:</span></span><br><span class="line">@echo <span class="variable">$(SRCS)</span></span><br><span class="line">@echo <span class="variable">$(OBJS)</span></span><br><span class="line">@echo <span class="variable">$(FILTER_SRCS)</span></span><br><span class="line">@echo <span class="variable">$(FILTER_OUT_SRCS)</span></span><br><span class="line">@echo <span class="variable">$(ADD_PREFIX_SRCS)</span></span><br></pre></td></tr></table></figure><ul><li>wildcard *.c 拿到所有源文件</li><li>patsubst %.c, %.o  字符串替换 目的是为了赋给 OBJS</li><li>filter 保留符合格式的文件</li><li>filter-out 排除符合格式的文件</li><li>addprefix 加前缀</li></ul><h4 id="赋值符">赋值符</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">name = kimi</span><br><span class="line"></span><br><span class="line"><span class="comment"># cname = $(name)</span></span><br><span class="line"><span class="comment"># cname := $(name)</span></span><br><span class="line"></span><br><span class="line">cname ?= shimamura</span><br><span class="line"></span><br><span class="line">name = adachi</span><br><span class="line"></span><br><span class="line"><span class="section">print:</span></span><br><span class="line">@echo cname = <span class="variable">$(cname)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>=   可以使用 前后的变量</li><li>:=   只可以使用前面的变量</li><li>?=  如果前面定义了就使用原来的，前面没有定义才使用这里的值</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Makefile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlite3</title>
      <link href="/2024/04/20/C%E8%AF%AD%E8%A8%80/sqlite/"/>
      <url>/2024/04/20/C%E8%AF%AD%E8%A8%80/sqlite/</url>
      
        <content type="html"><![CDATA[<h3 id="数据库的组成">数据库的组成</h3><ul><li>操作系统 OS</li><li>数据库管理系统 DMS</li><li>数据库管理员 DBA</li></ul><h3 id="创建表和删除表">创建表和删除表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> </span><br><span class="line">tb_worker(wid <span class="type">char</span>(<span class="number">18</span>), tel <span class="type">char</span>(<span class="number">11</span>), name <span class="type">varchar</span>(<span class="number">10</span>), salary <span class="type">decimal</span>(<span class="number">10</span>, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用其他表的查询结果创建新的表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> newtable <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_worker;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="插入数据">插入数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 第一种写法</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_student(id, name, age) <span class="keyword">VALUES</span>(<span class="number">6</span>, <span class="string">&#x27;kimi&#x27;</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 第二种写法 默认全部字段</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_student <span class="keyword">VALUES</span>(<span class="number">7</span>, <span class="string">&#x27;kimi&#x27;</span>, <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 指定 某些字段 但是必须包含 NOT NULL 的字段 其他默认为NULL</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_student(id, age) <span class="keyword">VALUES</span>(<span class="number">8</span>, <span class="number">17</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 相当于复制表  要求两个表结构 要相同</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> user1 <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> tb_student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入多行数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_student <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;kimi&#x27;</span>, <span class="number">15</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;kimi&#x27;</span>, <span class="number">15</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;kimi&#x27;</span>, <span class="number">15</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="删除数据">删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表中所有数据 并不像 DROP 去删除表</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tb_student;</span><br><span class="line"><span class="comment">-- 删除某一行</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tb_student <span class="keyword">WHERE</span> tb_student.id <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tb_student <span class="keyword">WHERE</span> tb_student.name <span class="operator">=</span> <span class="string">&#x27;kimi&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="查询数据">查询数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> demo;</span><br><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">FROM</span> demo;</span><br><span class="line"><span class="keyword">SELECT</span> id, name <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>, demo.Hint <span class="keyword">AS</span> <span class="string">&#x27;介绍&#x27;</span> <span class="keyword">FROM</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;Paul&#x27;</span> </span><br><span class="line"><span class="keyword">OR</span> </span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;Allen&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">worker.ADDRESS <span class="operator">=</span> <span class="string">&#x27;Texas&#x27;</span></span><br><span class="line"><span class="keyword">AND</span></span><br><span class="line">worker.AGE <span class="operator">=</span> <span class="number">27</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">worker.AGE <span class="operator">&gt;=</span> <span class="number">26</span></span><br><span class="line"><span class="keyword">OR</span></span><br><span class="line">worker.SALARY <span class="operator">&gt;=</span> <span class="number">65000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">worker.AGE <span class="keyword">BETWEEN</span> <span class="number">25</span> <span class="keyword">AND</span> <span class="number">27</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">worker.name <span class="keyword">IN</span>(<span class="string">&#x27;Paul&#x27;</span>, <span class="string">&#x27;Allen&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">worker.AGE <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">worker.name <span class="keyword">LIKE</span> <span class="string">&#x27;%a%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">worker.name <span class="keyword">LIKE</span> <span class="string">&#x27;_a%&#x27;</span>; <span class="comment">-- _表示一个占位符 %表示多个( &gt;= 0)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>like 中的 % 一般不放在前面 因为会导致索引失效 影响查询效率</p></blockquote><h3 id="更新">更新</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">SET</span> </span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;tamako&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">SET</span> </span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;kimi&#x27;</span>,</span><br><span class="line">id <span class="operator">=</span> <span class="number">6</span></span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;tamako&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">SET</span> </span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;kimi&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;takagi&#x27;</span> <span class="keyword">AND</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="order-by">order by</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">ASC</span>; <span class="comment">-- 默认 asc 升序 可省略</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker <span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="索引">索引</h3><p>索引操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 单列索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX index_id <span class="keyword">on</span> worker(id);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 复合索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX index_name_id <span class="keyword">on</span> worker(name, id);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 复合索引 要满足最左匹配原则 不然会导致索引失效 id 可写可不写 但name必须有且在最前面 </span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;zs&#x27;</span> <span class="keyword">and</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除索引</span></span><br><span class="line"><span class="keyword">DROP</span> INDEX index_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 唯一索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX index_id <span class="keyword">on</span> worker(id);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX index_name <span class="keyword">on</span> worker(name);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 验证</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(name, age) <span class="keyword">VALUES</span>(<span class="string">&#x27;Paul&#x27;</span>, <span class="number">22</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker;</span><br></pre></td></tr></table></figure><p>加快查询速度但是占用额外空间</p><p>相当于另外一个表 数据结构，适合多读少写的表，因为创建索引后 插入更新操作更慢了，因为还要更新索引表</p><ul><li>小表 不要用索引</li><li>有频繁的更新插入操作的表 不要用索引</li><li>有大量重复值 / 大量NULL值 / 有频繁更新插入操作 的列上 不要用索引</li></ul><p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20240506161650932.png" alt=""></p><p>索引的种类</p><ul><li>hash索引  <strong>不适合做范围查询</strong></li><li>二叉树  b+树 索引<ul><li>节点存储据 找到了直接取</li><li>节点存地址 根据地址找到存数据的位置</li><li>平衡二叉树：左右节点相当 通过左旋右旋调整</li></ul></li></ul><p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20240506163015749.png" alt=""></p><h3 id="系统表">系统表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sqlite_master;</span><br><span class="line"><span class="keyword">SELECT</span> type, name, tbl_name <span class="keyword">FROM</span> sqlite_master <span class="keyword">WHERE</span> type <span class="operator">=</span> <span class="string">&#x27;table&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="sql执行顺序">sql执行顺序</h3><p>from —&gt;  on   —&gt;   join   —&gt;   where   —&gt;   select</p><h3 id="命令行常用命令">命令行常用命令</h3><ul><li><code>.mode box / table / column</code> 美化显示</li><li><code>.indices / .indexes</code> 显示索引</li><li><code>.header on</code> 查询结果显示 列名</li><li><code>.tables</code> 当前数据库的表</li><li><code>.databases</code> 当前数据库</li></ul><h3 id="约束">约束</h3><ul><li><code>NOT NULL</code> ⭐</li><li><code>DEFAULT</code></li><li><code>UNIQUE</code>  ⭐</li><li><code>PRIMARY KEY</code> ⭐<ul><li>主键 == UNIQUE + NOT NULL （与其他不同）</li><li>只能有一个主键 可以把多个字段 作为一个主键</li><li>可以是NULL 与 mysql… 不同</li><li><strong>与数据类型有关  如果是 int  可以为NULL 但如果是 INTEGER 就会自增 就算赋 NULL值 也会忽略</strong></li></ul></li><li><code>CHECK</code></li><li><code>外键约束</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> worker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> worker (</span><br><span class="line">wid <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;kimi&#x27;</span>,</span><br><span class="line">salary <span class="type">real</span> <span class="keyword">DEFAULT</span> <span class="number">5000</span>,</span><br><span class="line">age <span class="type">integer</span> <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span> (age <span class="operator">&gt;</span> <span class="number">15</span>),</span><br><span class="line">tel <span class="type">char</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;13563742464&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(age) <span class="keyword">VALUES</span>(<span class="number">14</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(age) <span class="keyword">VALUES</span>(<span class="number">16</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(age) <span class="keyword">VALUES</span>(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(name, age, salary) <span class="keyword">VALUES</span> (<span class="string">&#x27;adachi&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;10000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(name, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;shimamura&#x27;</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker;</span><br></pre></td></tr></table></figure><blockquote><p>sqlite 不能删除约束 添加约束 只能 重新建表 把 旧表的数据迁移过去</p><p><a href="https://www.sqlite.org/lang_altertable.html">https://www.sqlite.org/lang_altertable.html</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> new_example_table (</span><br><span class="line">    id <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    email TEXT <span class="keyword">UNIQUE</span>,</span><br><span class="line">    name TEXT</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> new_example_table <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> example_table;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> example_table;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> new_example_table RENAME <span class="keyword">TO</span> example_table;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建新表 -&gt; 复制数据 -&gt; 删除旧表 -&gt; 重命名为旧表</p><p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20240507105427578.png" alt=""></p></blockquote><h3 id="ALTER-TABLE">ALTER TABLE</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> worker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> worker (</span><br><span class="line">wid <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;kimi&#x27;</span>,</span><br><span class="line">salary <span class="type">real</span> <span class="keyword">DEFAULT</span> <span class="number">5000</span>,</span><br><span class="line">age <span class="type">integer</span> <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span> (age <span class="operator">&gt;</span> <span class="number">15</span>),</span><br><span class="line">tel <span class="type">char</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;13563742464&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(age) <span class="keyword">VALUES</span>(<span class="number">14</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(age) <span class="keyword">VALUES</span>(<span class="number">16</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(wid, age) <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(name, age, salary) <span class="keyword">VALUES</span> (<span class="string">&#x27;adachi&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;10000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> worker(name, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;shimamura&#x27;</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建一个 不包含 age UNIQUE约束 结构的新表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> woker_tmp (</span><br><span class="line">  wid <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;kimi&#x27;</span>,</span><br><span class="line">salary <span class="type">real</span> <span class="keyword">DEFAULT</span> <span class="number">5000</span>,</span><br><span class="line">age <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span> (age <span class="operator">&gt;</span> <span class="number">15</span>),</span><br><span class="line">tel <span class="type">char</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;13563742464&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> woker_tmp <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> worker;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> woker_tmp RENAME <span class="keyword">TO</span> worker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker;</span><br></pre></td></tr></table></figure><h3 id="Join">Join</h3><blockquote><ol><li>注意外键声明的语法</li><li>注意级联删除语法</li><li>删除数据的两种写法</li><li>多表联查的两种写法</li><li>区分 inner join / left join / outer join</li><li>USING 用法  当两个表的 相关字段名 一样 可以代替ON</li><li>多表联查 和 外键约束 是两个独立的东西，加外键约束 是为了限制 一些不合理的操作，比如插入员工数据 给的 dept_id 在dept表根本不存在，或者实现一些级联删除操作等</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> dept;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">id <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(name) <span class="keyword">VALUES</span>(<span class="string">&#x27;产品部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(name) <span class="keyword">VALUES</span>(<span class="string">&#x27;开发部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(name) <span class="keyword">VALUES</span>(<span class="string">&#x27;测试部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(name) <span class="keyword">VALUES</span>(<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> emp;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">id <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">dept_id <span class="type">INTEGER</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(dept_id) </span><br><span class="line">    <span class="keyword">REFERENCES</span> dept(id) </span><br><span class="line">    <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(name, dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;kimi&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(name, dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;tamako&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(name, dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;adachi&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(name, dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;shimamura&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(name, dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;nixikada&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(name, dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;takagi&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(name, dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;takagi&#x27;</span>, <span class="number">6</span>); <span class="comment">-- FOREIGN KEY CONSTRAINT failed</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 先删掉 部门的员工 再删掉部门 直接删掉部门 会有外键约束报错</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp.dept_id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> dept.id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 级联删除 ON DELETE CASCADE</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> dept.id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> dept; <span class="comment">-- * 测试用即可 实际工作不要用 * </span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 不加 on 限制 会产生笛卡尔积 即每个员工 都要与所有部门匹配(实际每个员工只会属于一个部门) 这是错误的</span></span><br><span class="line"><span class="keyword">SELECT</span> e.name <span class="keyword">AS</span> <span class="string">&#x27;员工名&#x27;</span>, d.name <span class="keyword">AS</span> <span class="string">&#x27;部门名&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d</span><br><span class="line"><span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 另一种写法</span></span><br><span class="line"><span class="keyword">SELECT</span> e.name <span class="keyword">AS</span> <span class="string">&#x27;员工名&#x27;</span>, d.name <span class="keyword">AS</span> <span class="string">&#x27;部门名&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> emp e, dept d</span><br><span class="line"><span class="keyword">WHERE</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 三表查</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> <span class="keyword">identity</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">identity</span> (</span><br><span class="line">id <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">identity_id <span class="type">char</span>(<span class="number">18</span>) <span class="keyword">UNIQUE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">identity</span>(name, identity_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;kimi&#x27;</span>, <span class="string">&#x27;410259205409233853&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">identity</span>(name, identity_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;tamako&#x27;</span>, <span class="string">&#x27;410259209409233853&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">identity</span>(name, identity_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;shimamura&#x27;</span>, <span class="string">&#x27;410259202409233853&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">identity</span>(name, identity_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;adachi&#x27;</span>, <span class="string">&#x27;410251209409233853&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">identity</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">e.name <span class="keyword">AS</span> <span class="string">&#x27;员工姓名&#x27;</span>,</span><br><span class="line">d.name <span class="keyword">AS</span> <span class="string">&#x27;部门姓名&#x27;</span>,</span><br><span class="line">i.identity_id <span class="keyword">AS</span> <span class="string">&#x27;身份证号&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id <span class="operator">=</span> d.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">identity</span> i <span class="keyword">ON</span> e.name <span class="operator">=</span> i.name;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- LEFT JOIN INNER JOIN 区别</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp e</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">dept d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> emp e <span class="keyword">ON</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- USING 用法</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> dept_tmp;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept_tmp (</span><br><span class="line">dept_id <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept_tmp(name) <span class="keyword">VALUES</span>(<span class="string">&#x27;产品部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept_tmp(name) <span class="keyword">VALUES</span>(<span class="string">&#x27;开发部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept_tmp(name) <span class="keyword">VALUES</span>(<span class="string">&#x27;测试部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept_tmp(name) <span class="keyword">VALUES</span>(<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> dept_tmp;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">e.name <span class="keyword">AS</span> <span class="string">&#x27;员工姓名&#x27;</span>,</span><br><span class="line">d.name <span class="keyword">AS</span> <span class="string">&#x27;部门&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> emp e </span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept_tmp d <span class="keyword">USING</span>(dept_id);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="常用函数">常用函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> func_user;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> func_user (</span><br><span class="line">id <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">username <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">password <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> func_user(username, password) <span class="keyword">VALUES</span> (<span class="string">&#x27;adachi&#x27;</span>, <span class="string">&#x27;123&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="built_in">COUNT</span>( <span class="operator">*</span> ) </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">func_user </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">username <span class="operator">=</span> <span class="string">&#x27;adac2hi&#x27;</span> </span><br><span class="line"><span class="keyword">AND</span> password <span class="operator">=</span> <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> worker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">name,</span><br><span class="line">salary,</span><br><span class="line">salary <span class="operator">+</span> <span class="number">100</span> <span class="keyword">AS</span> <span class="string">&#x27;薪水+100&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">worker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> <span class="string">&#x27;员工薪水=5000人数&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">worker</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">=</span> <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">max</span>(salary) <span class="keyword">FROM</span> worker;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">min</span>(salary) <span class="keyword">FROM</span> worker;</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="built_in">max</span>( salary ) <span class="keyword">AS</span> <span class="string">&#x27;最高薪水&#x27;</span>,</span><br><span class="line"><span class="built_in">min</span>( salary ) <span class="keyword">AS</span> <span class="string">&#x27;最低薪水&#x27;</span>,</span><br><span class="line"><span class="built_in">AVG</span>( salary ) <span class="keyword">AS</span> <span class="string">&#x27;平均薪水&#x27;</span>,</span><br><span class="line"><span class="built_in">SUM</span>( salary ) <span class="keyword">AS</span> <span class="string">&#x27;发出薪水&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">worker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">name <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line"><span class="built_in">UPPER</span>( name ) <span class="keyword">AS</span> <span class="string">&#x27;大写&#x27;</span>,</span><br><span class="line">LENGTH( name ) <span class="keyword">AS</span> <span class="string">&#x27;姓名长度&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">worker;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ABS</span>(<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">SELECT</span> SQLITE_VERSION();</span><br></pre></td></tr></table></figure><h3 id="视图View">视图View</h3><blockquote><ul><li>视图是个虚表  本身没有数据</li><li>优点<ul><li>封装复杂查询，简化 sql 语句编写（特别是多表查询）</li><li>隐藏实际表  只暴露 视图 （两家公司数据库对接）</li></ul></li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- AS 后 起什么别名 有文档说明</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v_emp <span class="keyword">AS</span> <span class="keyword">SELECT</span></span><br><span class="line">e.name <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">d.name <span class="keyword">AS</span> <span class="string">&#x27;部门&#x27;</span>,</span><br><span class="line">i.identity_id <span class="keyword">AS</span> <span class="string">&#x27;身份证号&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp e</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id <span class="operator">=</span> d.id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">identity</span> i <span class="keyword">ON</span> i.name <span class="operator">=</span> e.name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v_emp; <span class="comment">-- 数据库层面的接口对接</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> v_emp;</span><br></pre></td></tr></table></figure><h3 id="事务Transaction">事务Transaction</h3><blockquote><ul><li>ACID<ul><li>Atomicity：原子性 要执行都执行 有一个操作有问题 都要回滚</li><li>Consistency：一致性</li><li>Isolation：隔离性 事务之间独立</li><li>Durability：持久性</li></ul></li><li>事务隔离级别<ul><li>mysql这种功能强大 sqlite 几乎没有</li></ul></li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> transaction_user;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> transaction_user (</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">balance <span class="type">real</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> transaction_user(name, balance) <span class="keyword">VALUES</span> (<span class="string">&#x27;zs&#x27;</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> transaction_user(name, balance) <span class="keyword">VALUES</span> (<span class="string">&#x27;ls&#x27;</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> transaction_user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> transaction_user </span><br><span class="line"><span class="keyword">SET</span> balance <span class="operator">=</span> balance <span class="operator">-</span> <span class="number">200</span> </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> transaction_user </span><br><span class="line"><span class="keyword">SET</span> balance <span class="operator">=</span> balance <span class="operator">+</span> <span class="number">200</span> </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;ls&#x27;</span>;</span><br><span class="line"><span class="comment">-- ROLLBACK;</span></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><h3 id="备份和恢复">备份和恢复</h3><p>比如要备份 <code>test1.db </code> 到 <code>test2.db</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sqlite3 test1.db</span><br><span class="line"></span><br><span class="line">.output backup.sql</span><br><span class="line">.dump</span><br><span class="line">.q</span><br><span class="line"></span><br><span class="line">sqlite3 test2.db</span><br><span class="line"></span><br><span class="line">.read backup.sql</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">验证是否 备份完成</span></span><br></pre></td></tr></table></figure><p>如果要备份单个表 <code>worker</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.output backup.sql</span><br><span class="line">.dump worker</span><br><span class="line">.q</span><br><span class="line"></span><br><span class="line">sqlite3 test2.db</span><br><span class="line"></span><br><span class="line">.read backup.sql</span><br></pre></td></tr></table></figure><blockquote><p>.output xxx.sql 表示 之后命令输出的结果 都输出到 xxx.sql 中</p><p>sqlite3 进入后 不能用 <code>&gt;</code> 这种管道符了</p></blockquote><p>第二种方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlite3 test1.db .dump &gt; back.sql</span><br><span class="line">sqlite3 test2.db &lt; back.sql</span><br></pre></td></tr></table></figure><p>而且这种方法 只能备份 整个数据库 不能备份单个表</p><blockquote><p>powershell 环境 识别不了 符号 而且会有编码问题</p><p>只能用 linux 和 cmd</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> sqlite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单例模式</title>
      <link href="/2023/12/11/Java/Java%E5%9F%BA%E7%A1%80/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
      <url>/2023/12/11/Java/Java%E5%9F%BA%E7%A1%80/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>这篇文章总结下为什么要有单例模式以及常见的实现方式。</p><h2 id="为什么要有单例模式">为什么要有单例模式</h2><p>有1000个字符串就会有1000个实例（先不考虑字符串常量池），但是当想要程序某个对象只会存在一个时，就会有<mark>只能创建一个实例</mark>这种需求，比如一些配置类。</p><p>当然，如果多加注意，确保只使用一次<code>new myClass()</code>就可以达到这个目的，但显然人们没法接收这种情况，而是想要无论什么情况下都只能存在一个实例。</p><p>像这样任何情况下都能确保只生成一个实例的模式就是<code>Singleton</code>模式。</p><h2 id="实现单例模式">实现单例模式</h2><h3 id="基本实现方式">基本实现方式</h3><p>先来看一个最基本的实现方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Singleton</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Singleton</span> <span class="variable">singleton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Singleton</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Singleton</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;创建实例&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title function_">getSingleton</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码中有两点</p><ol><li><code>Singleton</code>类的构造函数被<code>private</code>修饰，这是为了禁止类外部调用该构造函数，为了确保任何情况下都只能存在这一个实例，必须用<code>private</code>修饰</li><li><code>getSingleton</code>方法，以便于外部可以通过这个方法获取这个唯一的实例，这个方法名随意。</li><li>为了验证确，在私有构造方法中加了输出语句，预期结果应该是只输出一次。</li></ol><blockquote><p>解释下，之前的文章提到过，类是有一个默认构造方法的，这个方法是<code>public</code>修饰的，但只要我们自定义了构造函数，Java就不会帮我们添加这个默认构造方法了。</p></blockquote><p>测试下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Singleton</span> <span class="variable">obj1</span> <span class="operator">=</span> Singleton.getSingleton();</span><br><span class="line">    <span class="type">Singleton</span> <span class="variable">obj2</span> <span class="operator">=</span> Singleton.getSingleton();</span><br><span class="line"></span><br><span class="line">    System.out.println(obj1 == obj2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"><span class="comment">// 创建实例</span></span><br><span class="line"><span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="唯一实例何时生成">唯一实例何时生成</h3><p>在第一次调用<code>getInstance</code>方法时，就发生类加载，即<code>Singleton</code>类会被初始化，这时静态变量<code>singleton</code>被初始化，生成唯一实例</p><h3 id="常见实现方式">常见实现方式</h3><h4 id="懒汉式">懒汉式</h4><ul><li>在需要时创建单例实例。</li><li>线程不安全，需要考虑多线程环境。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LazySingleton</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LazySingleton instance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">LazySingleton</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LazySingleton <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> <span class="title class_">LazySingleton</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>为什么线程不安全呢？ 因为多线程情况下，有可能同时进入<code>if(instance == null)</code>这个判断中，从而多个线程都会创建实例。</p></blockquote><h4 id="饿汉式">饿汉式</h4><ul><li>在类加载时就创建单例实例。</li><li>线程安全，但可能导致资源浪费，因为即使不需要使用单例对象，也会在类加载时创建。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EagerSingleton</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">EagerSingleton</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EagerSingleton</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">EagerSingleton</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> EagerSingleton <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这个就是上面说的最基本的实现了，关键是它是在类加载时就创建了实例，线程安全。</p></blockquote><h4 id="双重检查锁定">双重检查锁定</h4><ul><li>在懒汉式基础上增加了同步机制，提高了多线程环境下的性能。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Singleton</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Singleton singleton;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Singleton</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;创建实例&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title function_">getSingleton</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Singleton.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="literal">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> <span class="title class_">Singleton</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Singleton</span> <span class="variable">obj1</span> <span class="operator">=</span> Singleton.getSingleton();</span><br><span class="line">        <span class="type">Singleton</span> <span class="variable">obj2</span> <span class="operator">=</span> Singleton.getSingleton();</span><br><span class="line"></span><br><span class="line">        System.out.println(obj1 == obj2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="静态内部类">静态内部类</h4><ul><li>利用静态内部类的特性实现懒加载和线程安全。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InnerClassSingleton</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">InnerClassSingleton</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SingletonHolder</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">InnerClassSingleton</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InnerClassSingleton</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> InnerClassSingleton <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SingletonHolder.instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="枚举">枚举</h4><ul><li>枚举方式天生就是单例的，并且防止反射和序列化破坏单例。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">EnumSingleton</span> &#123;</span><br><span class="line">    INSTANCE;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可以添加其他成员方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索意识</title>
      <link href="/2023/11/06/%E5%B7%A5%E5%85%B7/%E6%90%9C%E7%B4%A2%E6%84%8F%E8%AF%86/"/>
      <url>/2023/11/06/%E5%B7%A5%E5%85%B7/%E6%90%9C%E7%B4%A2%E6%84%8F%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p>参考视频 <a href="https://www.bilibili.com/video/BV1yw411F7J1/?spm_id_from=333.1007.top_right_bar_window_history.content.click">https://www.bilibili.com/video/BV1yw411F7J1/?spm_id_from=333.1007.top_right_bar_window_history.content.click</a></p><h2 id="搜索意识是什么？为什么要去搜？">搜索意识是什么？为什么要去搜？</h2><blockquote><p>学习差距 = 信息差（搜索能力决定） × 时间投入</p><p>本质上就是自己想做的事情，前人已经做过了，而且比自己做的好，现在要做的就是搜到它，学习它，避开它，利用它。仅此而已</p></blockquote><h2 id="怎么搜">怎么搜?</h2><p>分为几个部分</p><ul><li>信息资讯</li><li>知识技能</li><li>素材文件</li><li>工具软件</li><li>综合创作平台</li><li>chatGPT</li></ul><h2 id="信息资讯">信息资讯</h2><h3 id="使用chrome的搜索语法">使用chrome的搜索语法</h3><ul><li><p>最基本的关键词 + 空格模糊搜索 ✔️</p></li><li><p>限定完整关键词  ✔️</p></li><li><p><code>intext:</code>限定内容关键词（和上面配合使用） ✔️</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intext:&quot;无人机&quot; &quot;报告&quot; &quot;2023&quot;</span><br></pre></td></tr></table></figure><ul><li><code>filetype</code>限定文件格式 ✔️</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;无人机&quot; &quot;报告&quot; &quot;2023&quot; filetype:pdf</span><br></pre></td></tr></table></figure><ul><li><code>inurl</code> / <code>site</code>限定域名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;无人机&quot; &quot;报告&quot; &quot;2023&quot; inurl:199it.com</span><br></pre></td></tr></table></figure><h3 id="判断信息的源头">判断信息的源头</h3><p>一般是各种备案信息网站 网站要备案，企业要备案，各种各种都可以查。</p><p>以化妆品为例，源头就是国家药监局的化妆品备案信息，这个就是积累了，慢慢积累</p><h3 id="选择">选择</h3><ul><li>Google 主力✔️</li><li>搜狗搜索（搜公众号文章）✔️</li><li>youtube （视频 中文内容也很多）</li><li>领域垂类网站 （stackoverflow github csdn…）</li></ul><h3 id="资源类型">资源类型</h3><ul><li>网页</li><li>文档</li><li>电子书</li><li>视频</li></ul><p>如果想要快速了解一个行业，这个行业的研究报告(一般是pdf)可以帮助快速扫盲</p><p>搜索方法</p><ul><li><code>filetype:pdf</code></li><li><code>inurl:baogao</code></li><li>寻找类似网站 <code>SimilarSites</code> 似乎用不了</li><li>寻找专业网站 chrome搜索 <strong>xx行业/岗位必逛/必用的网站</strong></li></ul><p>搜索之前，<strong>要思考自己要找的东西载体是什么</strong>，也就是资源类型是什么，是网页，是文档，是电子书还是视频？？然后再<strong>思考自己是为了什么搜索</strong>，</p><p>如果只是为了<strong>了解</strong>，网页搜索就够了，但是如果是为了<strong>系统学习</strong>，就不光要搜网页、文档，还要看论文（质量高的知识源头）</p><p>不要未经任何个人思考和搜索后就去张口问别人，这是很不礼貌的，自己要带着思考和预先搜索得到的一些结果请教别人，这样别人也会乐意回答你的问题，这里参考Github项目 <strong>提问的智慧</strong></p><h2 id="素材文件">素材文件</h2><p>搜索各种视频 音频 照片素材</p><h3 id="搜索常见网站">搜索常见网站</h3><p>如何在不知道素材网站的情况下找到这些网站，上面已经提到了一个 <strong>xx必逛/必用的网站</strong></p><p>除此之外还可以英文搜索 <code>best sites for xxx</code> 比如说要搜索免费视频 就可以搜 <code>best sites for free stock videos</code>，这个就可以搜到一些 <strong>pexels</strong> <strong>Videezy</strong> 这样的网站，国外这种总结最好用的网站的文章还挺多的，其实lol官方也老喜欢整一些最强的5名选手，或者说各个位置的最强选手hhh</p><p>所以还是要学好英语，不过目前来说学会一些常见的表达足以，但是也要坚持学习</p><p><code>best sites for English learning</code> （现学现卖）</p><h3 id="网站推荐">网站推荐</h3><p><code>best sites for ppt templates</code> 找到 canva <a href="https://www.canva.com/">https://www.canva.com/</a></p><p><code>best sites for mind map</code> 找到 绘制脑图软件miro <a href="https://miro.com/app/dashboard/">https://miro.com/app/dashboard/</a></p><p>抠图 <a href="https://www.remove.bg/upload">https://www.remove.bg/upload</a></p><p>这种神奇的网站有很多，搜索的方法就是 <code>xxx需求 + online</code> 比如想给十年后的自己写封信</p><p>那么就搜索 <code>future letter online </code> 就能搜到实现类似功能的在线网站 <a href="https://www.futureme.org/">https://www.futureme.org/</a></p><p>或者想知道一些生产力工具  <code>2023 best apps productivity</code></p><p>或是chrome 插件 <code>best chrome extensions productivity</code></p><p>或是软件插件 <code>2023 best PowerPoint plugin productivity</code> 一般浏览器插件叫 extensions 软件插件叫 plugin</p><p>写完这些就能发现，想要迅速找到答案，必须要求</p><ol><li>关键词正确或意思相近  templates extensions plugin programing</li><li>表达清晰明了 <code>best sites for xxx productivity</code></li></ol><p>这两点套用到中文也是同理</p><p>到此为止，基本上就三点</p><ol><li>chrome / bilibili / youtube 搜索</li><li>微信搜一搜</li><li>练习中英文文字表达方式</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用vercel上线项目</title>
      <link href="/2023/11/06/%E5%B7%A5%E5%85%B7/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8vercel%E4%B8%8A%E7%BA%BF%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/11/06/%E5%B7%A5%E5%85%B7/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8vercel%E4%B8%8A%E7%BA%BF%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="前端部署">前端部署</h2><p>首先是前端项目，配置请求参数，并判断多环境</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isDev = process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> myAxios = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>: isDev ? <span class="string">&#x27;http://localhost:8080/api/&#x27;</span> : <span class="string">&#x27;待会部署到服务器的后端二级域名地址&#x27;</span>,</span><br><span class="line">    <span class="attr">withCredentials</span>: <span class="literal">true</span>, <span class="comment">// 携带cookie</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>build项目，终端进入到dist目录下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vercel --prod</span><br></pre></td></tr></table></figure><p>如果没有 安装vercel 会提示安装 文档在这里 <a href="https://vercel.com/docs/getting-started-with-vercel">https://vercel.com/docs/getting-started-with-vercel</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global add vercel  # 全局安装 vercel</span><br></pre></td></tr></table></figure><p>再运行上面的命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vercel --prod</span><br></pre></td></tr></table></figure><p>这之后会提示登录，选择GitHub登录，部署的账号，是否是更新已部署的项目（之前已经部署过了，所以选择y，第一次选择N）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vercel --prod</span><br><span class="line">? Set up and deploy “C:\dist”? [Y/n] y</span><br><span class="line">? Which scope <span class="keyword">do</span> you want to deploy to? mhyc</span><br><span class="line">? Link to existing project? [y/N] y</span><br><span class="line">? What’s the name of your existing project? myfriend-frontend</span><br></pre></td></tr></table></figure><p>到这里就前端就部署成功了，vercel也可以选择自定义域名，在domain那里，一般添加两条解析记录就可以</p><p>vecel也会提示如何添加这两条记录（会自动检测你是否配置成功的，不行就刷新刷新）</p><h2 id="后端部署">后端部署</h2><blockquote><p>后端部署 也可以使用 微信云托管（需要写Dockerfile） 这里在服务器部署</p></blockquote><blockquote><p>因为前端项目是部署在 vercel上的 发起的请求也是 https的，而后端如果还是像之前不支持https</p><p>就会出现 <code>The page at https://* was loaded over HTTPS, but requested an insecure XMLHttpReque</code> 这样的错误，所以我们需要在服务器提供商那里（这里以腾讯云为例）给后端域名申请ssl证书，支持https</p></blockquote><p>这个直接在ssl 控制台就可以申请，通过的很快</p><p>最后会得到两个文件 <code>keystorePass.txt</code> <code>xxx.jks</code>  jks文件放在 resources目录下</p><p>然后在 <code>application.yml</code>中进行下面的配置即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/api</span></span><br><span class="line">    <span class="attr">session:</span></span><br><span class="line">      <span class="attr">cookie:</span></span><br><span class="line">        <span class="attr">domain:</span> <span class="string">后端线上地址</span></span><br><span class="line">        <span class="comment"># http-only: true  使用https 就去掉这条 转而使用下面两条配置</span></span><br><span class="line">        <span class="attr">same-site:</span> <span class="string">none</span></span><br><span class="line">        <span class="attr">secure:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">key-store:</span> <span class="string">classpath:证书文件</span> <span class="string">放在resources下</span></span><br><span class="line">    <span class="attr">key-store-password:</span> <span class="string">ssl</span> <span class="string">密码</span> <span class="string">一般在文件中</span></span><br><span class="line">    <span class="attr">key-store-type:</span> <span class="string">JKS</span></span><br><span class="line">    <span class="attr">key-password:</span> <span class="string">ssl</span> <span class="string">密码</span> <span class="string">一般在文件中</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 可加可不加 默认是true</span></span><br></pre></td></tr></table></figure><p>配置好之后，就通过maven打包好项目，将jar包上传到服务器，并后台运行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> java -jar projectNmae-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod &amp; </span><br><span class="line"></span><br><span class="line">netstat -ntlp <span class="comment"># 查看是否启动</span></span><br></pre></td></tr></table></figure><p>有个细节，不知道是不是只有我有这个问题，比如这个项目运行在8081端口，所以需要在服务器控制台开放8081端口</p><p>但是除了这个之外，也要通过<code>linux</code>命令开启 防火墙的 8081端口，不然还是访问不了</p><p>还有就是这种具体的命令，问chatgpt 真的太方便了，之前一直没有尝试过，用了才觉得香</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --add-port=8081/tcp --permanent <span class="comment"># 开放8081</span></span><br><span class="line"></span><br><span class="line">sudo firewall-cmd --reload <span class="comment"># 刷新防火墙</span></span><br><span class="line"></span><br><span class="line">sudo firewall-cmd --list-ports <span class="comment"># 查看当前开放的端口</span></span><br></pre></td></tr></table></figure><p>打开浏览器，测试后端接口是否正常运行。</p><p>最后我得说，lng打的真的烂，gala也是真的惨…</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> vercel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo美化（一）</title>
      <link href="/2023/10/27/%E7%BE%8E%E5%8C%96/hexo%E7%BE%8E%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/10/27/%E7%BE%8E%E5%8C%96/hexo%E7%BE%8E%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="评论">评论</h2><p>注册DISQUS账号，创建一个site</p><p><img src="https://raw.githubusercontent.com/mhyccc/source/main/img/image-20231027173639149.png" alt=""></p><p>修改hexo 主题配置文件</p><p><img src="https://raw.githubusercontent.com/mhyccc/source/main/img/image-20231027173822152.png" alt=""></p><h2 id="代码块配色">代码块配色</h2><p>安装插件<code>hexo-prism-plugin</code><a href="https://github.com/ele828/hexo-prism-plugin">GitHub地址</a></p><p>可能是由于没怎么更新的原因 有一个渲染的坑，从 Issues中也能找到  <a href="https://github.com/ele828/hexo-prism-plugin/issues/61">地址</a></p><p>源码中的 <code>index.js</code>添加下面代码即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> map = &#123;</span><br><span class="line">  <span class="string">&#x27;&amp;#39;&#x27;</span>: <span class="string">&#x27;\&#x27;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;&amp;amp;&#x27;</span>: <span class="string">&#x27;&amp;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;&amp;gt;&#x27;</span>: <span class="string">&#x27;&gt;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;&amp;lt;&#x27;</span>: <span class="string">&#x27;&lt;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;&amp;quot;&#x27;</span>: <span class="string">&#x27;&quot;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;&amp;#123;&#x27;</span>: <span class="string">&#x27;&#123;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;&amp;#125;&#x27;</span>: <span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后还需要</p><ol><li>hexo配置文件</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 插件配置</span></span><br><span class="line"><span class="attr">prism_plugin:</span></span><br><span class="line">  <span class="attr">mode:</span> <span class="string">&#x27;preprocess&#x27;</span>    <span class="comment"># realtime/preprocess</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">false</span>    <span class="comment"># default false</span></span><br></pre></td></tr></table></figure><ol start="2"><li>主题配置文件</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_theme:</span> <span class="literal">false</span> <span class="comment">#  darker / pale night / light / ocean / mac / mac light / false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 网站美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis key value乱码</title>
      <link href="/2023/10/27/Java/redis/redis%20key%20value%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
      <url>/2023/10/27/Java/redis/redis%20key%20value%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>springboot 集成redis 往redis存数据时 如果不进行配置</p><p>key value都会出现乱码的情况, 这是因为 redis默认的序列化器<code>RedisSerializer</code> 出了问题</p><p>配置一下就好了</p><p>先说下 基本配置</p><p>集群配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">pool:</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">100</span> <span class="comment">#连接池最大连接数（负值表示没有限制）</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">3000</span> <span class="comment">#连接池最大阻塞等待时间（负值表示没有限制）</span></span><br><span class="line">      <span class="attr">max-idle:</span> <span class="number">200</span> <span class="comment">#连接池最大空闭连接数</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">50</span> <span class="comment">#连接汉最小空闲连接数</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="number">600</span> <span class="comment">#连接超时时间（毫秒）</span></span><br><span class="line">    <span class="attr">cluster:</span></span><br><span class="line">      <span class="attr">nodes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.75</span><span class="number">.132</span><span class="string">:6380</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.75</span><span class="number">.132</span><span class="string">:6381</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.75</span><span class="number">.132</span><span class="string">:6382</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.75</span><span class="number">.132</span><span class="string">:6383</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.75</span><span class="number">.132</span><span class="string">:6384</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.75</span><span class="number">.132</span><span class="string">:6385</span></span><br></pre></td></tr></table></figure><p>单机配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">localhost</span> <span class="comment"># ip地址</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span>  <span class="comment">#可不配，因为底层默认值为6379</span></span><br></pre></td></tr></table></figure><p>创建 <code>redis</code>配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory connectionFactory)</span> &#123;</span><br><span class="line">       RedisTemplate&lt;String, Object&gt; redisTemplate = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">        </span><br><span class="line">       <span class="comment">// value 序列化器配置</span></span><br><span class="line">       redisTemplate.setDefaultSerializer(<span class="keyword">new</span> <span class="title class_">GenericJackson2JsonRedisSerializer</span>());</span><br><span class="line">       <span class="comment">// key 序列化器配置</span></span><br><span class="line">       redisTemplate.setKeySerializer(RedisSerializer.string()); <span class="comment">// !!!!!</span></span><br><span class="line">       <span class="comment">// 需要指定 工厂</span></span><br><span class="line">       redisTemplate.setConnectionFactory(connectionFactory);</span><br><span class="line">       <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>⭐ 使用时key泛型必须和配置类中保持一致 <code>RedisTemplate&lt;String, Object&gt;</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看哪个进程在占用8080端口</title>
      <link href="/2023/10/24/linux/%E6%9F%A5%E7%9C%8B%E5%93%AA%E4%B8%AA%E8%BF%9B%E7%A8%8B%E5%8D%A0%E7%94%A88080%E7%AB%AF%E5%8F%A3/"/>
      <url>/2023/10/24/linux/%E6%9F%A5%E7%9C%8B%E5%93%AA%E4%B8%AA%E8%BF%9B%E7%A8%8B%E5%8D%A0%E7%94%A88080%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>启动<code>springboot</code>项目的时候 出现以下错误</p><blockquote><p>Web server failed to start. Port 8080 was already in use.</p></blockquote><h2 id="解决方法">解决方法</h2><h4 id="linux">linux</h4><ol><li>查找正在使用端口 8080 的进程 ID</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnp | grep 8080</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line">ps -aef | grep tomcat</span><br></pre></td></tr></table></figure><ol start="2"><li>使用上面结果中的进程 ID 杀死进程</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 process_id</span><br></pre></td></tr></table></figure><h4 id="windows">windows</h4><p>以管理员身份打开终端</p><ol><li>查找进程ID(<code>process_id</code>)</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr 8080</span><br></pre></td></tr></table></figure><ol start="2"><li>根据进程ID终止进程</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill /F /pid process_id</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231012125253776.png" alt=""></p><p><a href="https://stackoverflow.com/questions/34253779/tomcat-server-error-port-8080-already-in-use">参考文章</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>axios 种不上 cookie 的问题</title>
      <link href="/2023/10/24/%E5%89%8D%E7%AB%AF/axios/axios%20%E8%AE%BE%E7%BD%AE%E4%BA%86%20withCredentials%20=%20true%20%E4%BD%86%E8%BF%98%E6%98%AF%E4%B8%8D%E8%83%BD%E5%B8%A6%E4%B8%8A%20cookie%20%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2023/10/24/%E5%89%8D%E7%AB%AF/axios/axios%20%E8%AE%BE%E7%BD%AE%E4%BA%86%20withCredentials%20=%20true%20%E4%BD%86%E8%BF%98%E6%98%AF%E4%B8%8D%E8%83%BD%E5%B8%A6%E4%B8%8A%20cookie%20%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="axios-设置了-withCredentials-true-但还是不能带上-cookie-的问题">axios 设置了 withCredentials = true 但还是不能带上 cookie 的问题</h2><p>如题</p><p>前端配置了 cookie</p><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231023130024467.png" alt=""></p><p>后端也配了 跨域</p><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231023130330925.png" alt=""></p><p>但是报错</p><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231023130352139.png" alt=""></p><p>大概意思是说如果前端配置了 cookie, 后端<code>Access-Control-Allow-Origin</code>这个属性值不能是 <code>*</code> 所以指定一下地址</p><p>但是指定之后 又又报错了</p><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231023130603212.png" alt=""></p><p>大致意思是<code>Access-Control-Allow-Credentials</code>为空  需要在后端指定为<code>true</code>注意是 <code>string</code>类型 不是 <code>boolean</code>类型</p><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231023130759196.png" alt=""></p><p>这之后就可以了, 但是发请求时还是没有携带上<code>cookie</code> 在响应头发现警告</p><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231023130912928.png" alt=""></p><p>搜索时发现掘金有下面解决方案</p><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231023131127910.png" alt=""></p><p>CSDN也有(最后这样配置了)</p><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231023131336486.png" alt=""></p><p>成功携带上cookie了</p><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231023131610651.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM整合-todolist</title>
      <link href="/2022/10/09/Java/Java%E6%A1%86%E6%9E%B6/ssm%E6%95%B4%E5%90%88-todolist%E6%A1%88%E4%BE%8B/"/>
      <url>/2022/10/09/Java/Java%E6%A1%86%E6%9E%B6/ssm%E6%95%B4%E5%90%88-todolist%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="ssm整合步骤-todolist案例">ssm整合步骤-todolist案例</h2><h3 id="依赖">依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   需要依赖清单分析:</span></span><br><span class="line"><span class="comment">      spring</span></span><br><span class="line"><span class="comment">        ioc/di</span></span><br><span class="line"><span class="comment">          spring-context / 6.0.6</span></span><br><span class="line"><span class="comment">          jakarta.annotation-api / 2.1.1  jsr250  @Resource</span></span><br><span class="line"><span class="comment">        aop</span></span><br><span class="line"><span class="comment">          spring-aspects / 6.0.6</span></span><br><span class="line"><span class="comment">        tx</span></span><br><span class="line"><span class="comment">          spring-tx  / 6.0.6</span></span><br><span class="line"><span class="comment">          spring-jdbc / 6.0.6</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      springmvc</span></span><br><span class="line"><span class="comment">         spring-webmvc 6.0.6</span></span><br><span class="line"><span class="comment">         jakarta.jakartaee-web-api 9.1.0</span></span><br><span class="line"><span class="comment">         jackson-databind 2.15.0        JSON处理</span></span><br><span class="line"><span class="comment">         hibernate-validator   校验 @Validated</span></span><br><span class="line"><span class="comment">         hibernate-validator-annotation-processor 8.0.0.Final</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      mybatis</span></span><br><span class="line"><span class="comment">         mybatis  / 3.5.11</span></span><br><span class="line"><span class="comment">         mysql    / 8.0.25</span></span><br><span class="line"><span class="comment">         pagehelper / 5.1.11  分页</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      整合需要</span></span><br><span class="line"><span class="comment">         加载spring容器 spring-web / 6.0.6</span></span><br><span class="line"><span class="comment">         整合mybatis   mybatis-spring x x  SqlSessionFactoryBean</span></span><br><span class="line"><span class="comment">         数据库连接池    druid / x</span></span><br><span class="line"><span class="comment">         lombok        lombok / 1.18.26</span></span><br><span class="line"><span class="comment">         logback       logback/ 1.2.3</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>6.0.6<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jakarta.annotation-api.version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">jakarta.annotation-api.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jakarta.jakartaee-web-api.version</span>&gt;</span>9.1.0<span class="tag">&lt;/<span class="name">jakarta.jakartaee-web-api.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jackson-databind.version</span>&gt;</span>2.15.0<span class="tag">&lt;/<span class="name">jackson-databind.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hibernate-validator.version</span>&gt;</span>8.0.0.Final<span class="tag">&lt;/<span class="name">hibernate-validator.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.5.11<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>8.0.25<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pagehelper.version</span>&gt;</span>5.1.11<span class="tag">&lt;/<span class="name">pagehelper.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mybatis-spring.version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">mybatis-spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jakarta.servlet.jsp.jstl-api.version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">jakarta.servlet.jsp.jstl-api.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.26<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>17<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>17<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring pom.xml依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.annotation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.annotation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jakarta.annotation-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- springmvc --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.jakartaee-web-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jakarta.jakartaee-web-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- JSON处理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson-databind.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 校验 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hibernate-validator.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator-annotation-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hibernate-validator.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- mybatis依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- MySQL驱动 mybatis底层依赖jdbc驱动实现,本次不需要导入连接池,mybatis自带! --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 分页 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pagehelper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 整合第三方特殊依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 第三方连接池 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- lombok --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">```</span><br></pre></td></tr></table></figure><h3 id="配置类">配置类</h3><blockquote><p>MvcConfig+ServiceConfig+DataSourceConfig+MapperConfig</p></blockquote><h4 id="MvcConfig">MvcConfig</h4><ol><li>表明配置类 <code>@Configuration</code></li><li>Controller加入IOC  <code>@ComponentScan</code></li><li><code>implements</code> WebMvcConfigurer</li><li><code>HandlerMapping</code>(地址映射)  <code>HandlerAdapter</code>(简化参数接收响应) 加入IOC  且添加JSON转化器 <code>@EnableWebMvc</code></li></ol><h4 id="ServiceConfig">ServiceConfig</h4><ol><li><code>@Configuration</code></li><li>Service加入IOC  <code>@ComponentScan</code></li><li>开启aop <code>EnableAspectJAutoProxy</code></li><li>开启事务 <code>EnableTransactionManagement</code></li><li>实现事务管理</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> TransactionManager <span class="title function_">transactionManager</span><span class="params">(DataSource dataSource)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DataSourceTransactionManager</span>(dataSource);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DataSourceConfig">DataSourceConfig</h4><ol><li>@Configuration</li><li>创建 jdbc.properties 并引入 @PropertySource</li><li>DataSource 加入IOC</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:jdbc.properties&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataSourceConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.user&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.driver&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String driver;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        dataSource.setUsername(user);</span><br><span class="line">        dataSource.setPassword(password);</span><br><span class="line">        dataSource.setUrl(url);</span><br><span class="line">        dataSource.setDriverClassName(driver);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MapperConfig">MapperConfig</h4><blockquote><p>完全使用配置类</p></blockquote><ol><li>@Configuration</li><li>SqlSessionFactoryBean加入IOC</li><li>配置其他mybatis设置<ol><li>驼峰映射</li><li>多表映射</li><li>别名设置</li><li>分页插件设置</li></ol></li><li>Mapper 加入到IOC</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapperConfigAllJava</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SqlSessionFactoryBean <span class="title function_">sqlSessionFactoryBean</span><span class="params">(DataSource dataSource)</span> &#123;</span><br><span class="line">        <span class="type">SqlSessionFactoryBean</span> <span class="variable">sqlSessionFactoryBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBean</span>();</span><br><span class="line">        sqlSessionFactoryBean.setDataSource(dataSource);</span><br><span class="line"></span><br><span class="line">        org.apache.ibatis.session.<span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">org</span>.apache.ibatis.session.Configuration();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            &lt;!-- 开启驼峰映射 --&gt;</span></span><br><span class="line"><span class="comment">            &lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&gt;</span></span><br><span class="line"><span class="comment">            &lt;!-- 多表映射  FULL 会自动映射任何复杂的结果集（无论是否嵌套） --&gt;</span></span><br><span class="line"><span class="comment">            &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;FULL&quot;/&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        configuration.setMapUnderscoreToCamelCase(<span class="literal">true</span>);</span><br><span class="line">        configuration.setAutoMappingBehavior(AutoMappingBehavior.FULL);</span><br><span class="line"></span><br><span class="line">        sqlSessionFactoryBean.setConfiguration(configuration);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            &lt;package name=&quot;com.xiaodong.pojo&quot;/&gt;</span></span><br><span class="line"><span class="comment">            别名设置</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        sqlSessionFactoryBean.setTypeAliasesPackage(<span class="string">&quot;com.xiaodong.pojo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            分页插件设置</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">PageInterceptor</span> <span class="variable">pageInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageInterceptor</span>();</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.setProperty(<span class="string">&quot;helperDialect&quot;</span>,<span class="string">&quot;mysql&quot;</span>);</span><br><span class="line">        pageInterceptor.setProperties(properties);</span><br><span class="line">        sqlSessionFactoryBean.addPlugins(pageInterceptor);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mapper代理对象加入到ioc</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MapperScannerConfigurer <span class="title function_">mapperScannerConfigurer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MapperScannerConfigurer</span> <span class="variable">configurer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MapperScannerConfigurer</span>();</span><br><span class="line">        configurer.setBasePackage(<span class="string">&quot;com.xiaodong.mapper&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> configurer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Mvc启动类">Mvc启动类</h4><ol><li>继承<code>AbstractAnnotationConfigDispatcherServletInitializer</code></li><li>实现这三个方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IocInitConfig</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;</span><br><span class="line">    <span class="comment">// rootIOC  == 持久层 + 业务层</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;DataSourceConfig.class, MapperConfigAllJava.class, ServiceConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mvcIOC == web层</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;MvcConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置 响应路径</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/&quot;</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="建表">建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database `ssm<span class="operator">-</span>integration`;</span><br><span class="line"></span><br><span class="line">use `ssm<span class="operator">-</span>integration`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> schedule</span><br><span class="line">(</span><br><span class="line">    id        <span class="type">INT</span>          <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    title     <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    completed <span class="type">BOOLEAN</span>      <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> schedule (title, completed)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;学习java&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Python&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">       (<span class="string">&#x27;学习C++&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习JavaScript&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">       (<span class="string">&#x27;学习HTML5&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习CSS3&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Vue.js&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习React&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Angular&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Node.js&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Express&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Koa&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">       (<span class="string">&#x27;学习MongoDB&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习MySQL&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Redis&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Git&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Docker&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Kubernetes&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">       (<span class="string">&#x27;学习AWS&#x27;</span>, <span class="literal">true</span>),</span><br><span class="line">       (<span class="string">&#x27;学习Azure&#x27;</span>, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><h3 id="创建实体类">创建实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Schedule</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">private</span> Boolean completed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaodong.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageBean</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> currentPage;   <span class="comment">// 当前页码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> pageSize;      <span class="comment">// 每页显示的数据量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> total;    <span class="comment">// 总数据条数</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; data;      <span class="comment">// 当前页的数据集合</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建返回结果类">创建返回结果类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">R</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">code</span> <span class="operator">=</span> <span class="number">200</span>; <span class="comment">//200成功状态码</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>; <span class="comment">//返回状态</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object data;  <span class="comment">//返回具体数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">(Object data)</span>&#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">        r.data = data;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> R  <span class="title function_">fail</span><span class="params">(Object data)</span>&#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">        r.code = <span class="number">500</span>; <span class="comment">//错误码</span></span><br><span class="line">        r.flag = <span class="literal">false</span>; <span class="comment">//错误状态</span></span><br><span class="line">        r.data = data;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三层架构">三层架构</h3><blockquote><p>写代码前 创建好类 接口 实现类 有提示舒服一些</p></blockquote><h4 id="Controller层">Controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CrossOrigin</span> <span class="comment">// 解决CORS跨域问题</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;schedule&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScheduleController</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ScheduleService scheduleService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询 /schedule</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageSize 每页大小</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> currentPage 当前页数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果类R</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;&#123;pageSize&#125;/&#123;currentPage&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">page</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">int</span> pageSize,</span></span><br><span class="line"><span class="params">                  <span class="meta">@PathVariable</span> <span class="type">int</span> currentPage)</span> &#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> scheduleService.page(pageSize, currentPage);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除计划 /schedule/&#123;id&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 计划id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果类R</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">remove</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> scheduleService.remove(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加计划 /schedule</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> schedule 计划</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果类R</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Validated</span> Schedule schedule, BindingResult result)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.fail(<span class="string">&quot;参数格式错误!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> scheduleService.save(schedule);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新计划 /schedule</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> schedule 计划</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果类R</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PutMapping</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Validated</span> Schedule schedule, BindingResult result)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.fail(<span class="string">&quot;参数格式错误!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> scheduleService.update(schedule);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Service层">Service层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScheduleServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ScheduleService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ScheduleMapper scheduleMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">page</span><span class="params">(<span class="type">int</span> pageSize, <span class="type">int</span> currentPage)</span> &#123;</span><br><span class="line">        <span class="comment">// 开启分页</span></span><br><span class="line">        PageHelper.startPage(currentPage, pageSize);</span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        List&lt;Schedule&gt; scheduleList = scheduleMapper.queryList();</span><br><span class="line">        <span class="comment">// 分页数据装配</span></span><br><span class="line">        PageInfo&lt;Schedule&gt; info = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;&gt;(scheduleList);</span><br><span class="line">        <span class="comment">// 装配pageBean</span></span><br><span class="line">        PageBean&lt;Schedule&gt; pageBean = <span class="keyword">new</span> <span class="title class_">PageBean</span>&lt;&gt;(currentPage, pageSize, info.getTotal(), info.getList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回结果</span></span><br><span class="line">        <span class="keyword">return</span> R.ok(pageBean);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">remove</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> scheduleMapper.deleteSchedule(id);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.ok(<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.fail(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(Schedule schedule)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> scheduleMapper.insert(schedule);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.ok(<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.fail(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">update</span><span class="params">(Schedule schedule)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (schedule.getId() != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> scheduleMapper.update(schedule);</span><br><span class="line">            <span class="keyword">if</span> (rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> R.ok(schedule);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> R.fail(schedule);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.fail(<span class="string">&quot;id为null !!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Mapper层">Mapper层</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- namespace == mapper接口类的全限定名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.xiaodong.mapper.ScheduleMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;schedule&quot;</span>&gt;</span></span><br><span class="line">        select * from schedule</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteSchedule&quot;</span>&gt;</span></span><br><span class="line">        delete from schedule where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span>&gt;</span></span><br><span class="line">        insert into schedule(title, completed) values(#&#123;title&#125;, #&#123;completed&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span>&gt;</span></span><br><span class="line">        update schedule set title = #&#123;title&#125;, completed = #&#123;completed&#125; where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="测试请求">测试请求</h3><blockquote><p>可以选择在IDEA测试  也可以用第三方工具(apifox/postman)</p></blockquote><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231009125141628.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp打包apk</title>
      <link href="/2022/09/08/%E5%89%8D%E7%AB%AF/uniapp/uniapp%E6%89%93%E5%8C%85apk/"/>
      <url>/2022/09/08/%E5%89%8D%E7%AB%AF/uniapp/uniapp%E6%89%93%E5%8C%85apk/</url>
      
        <content type="html"><![CDATA[<h2 id="打包发行">打包发行</h2><blockquote><p>在 HBuilderX 工具栏，点击发行，选择原生 app-云端打包，如下图</p></blockquote><p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20220908165225469.webp" alt=""></p><p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20220908170902154.webp" alt=""></p><p>选择公共证书 -&gt; 快速安心打包 简单一些</p><blockquote><p>也可以选择自有证书, 不过这样麻烦一些, 需要自己去获取证书</p></blockquote><p><a href="https://ask.dcloud.net.cn/article/35777">获取证书参考教程</a></p><blockquote><p>根据获取到的证书 填写信息</p></blockquote><p><img src="https://shaohua-1313651385.cos.ap-guangzhou.myqcloud.com/img/image-20220908165940013.webp" alt=""></p><p>证书别名: 获取证书过程中会提到</p><p>密码: 自己设置的密码</p><blockquote><p>值得一提的是 cmd 命令框设置密码时候是不显示的，而且光标也不动，但实际上是输入进去了，输完直接回车即可</p></blockquote><p>证书文件: 用 Everything 搜索 test.keyStore 文件 直接复制它的路径 或者复制一份到自己容易找到的路径</p><blockquote><p>最后选择快速安心打包 等待打包完成即可</p></blockquote><p>最后的 apk 文件是在 项目路径/unpackage/release/apk/xxx.apk 手机直接安装查看即可</p><h2 id="配置-app-信息">配置 app 信息</h2><blockquote><p>打开项目下的 manifest.json 配置文件(可视化界面)</p></blockquote><ol><li>基础配置</li><li>图标配置</li><li>启动页面</li><li>功能<ol><li>定位</li><li>通知</li></ol></li></ol><p><a href="https://zh.uniapp.dcloud.io/tutorial/">manifest.json 配置文件参考教程</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux终端 ifconfig不显示子网ip</title>
      <link href="/2022/09/05/linux/linux%20ifconfig%20%E4%B8%8D%E6%98%BE%E7%A4%BAip%E5%9C%B0%E5%9D%80/"/>
      <url>/2022/09/05/linux/linux%20ifconfig%20%E4%B8%8D%E6%98%BE%E7%A4%BAip%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u012255097/article/details/83834702">参考文章</a></p><h4 id="打开-ifcfg-ens33-配置文件">打开 ifcfg-ens33 配置文件</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network<span class="literal">-scripts</span>/ifcfg<span class="literal">-ens33</span></span><br></pre></td></tr></table></figure><h4 id="修改-ONBOOT-yes">修改 ONBOOT=yes</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=<span class="string">Ethernet</span></span><br><span class="line"><span class="attr">PROXY_METHOD</span>=<span class="string">none</span></span><br><span class="line"><span class="attr">BROWSER_ONLY</span>=<span class="string">no</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=<span class="string">dhcp</span></span><br><span class="line"><span class="attr">DEFROUTE</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV4_FAILURE_FATAL</span>=<span class="string">no</span></span><br><span class="line"><span class="attr">IPV6INIT</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV6_AUTOCONF</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV6_DEFROUTE</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV6_FAILURE_FATAL</span>=<span class="string">no</span></span><br><span class="line"><span class="attr">IPV6_ADDR_GEN_MODE</span>=<span class="string">stable-privacy</span></span><br><span class="line"><span class="attr">NAME</span>=<span class="string">ens33</span></span><br><span class="line"><span class="attr">UUID</span>=<span class="string">3f7f48da-0954-4757-9e63-171f8cab8177</span></span><br><span class="line"><span class="attr">DEVICE</span>=<span class="string">ens33</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="string">yes</span></span><br></pre></td></tr></table></figure><h4 id="重启网络服务">重启网络服务</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service network restart</span><br></pre></td></tr></table></figure><blockquote><p>sudo 表示以最高权限执行命令</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL Windows中的Linux</title>
      <link href="/2022/08/05/linux/%E9%80%82%E7%94%A8%E4%BA%8E%20Linux%20%E7%9A%84%20Windows%20%E5%AD%90%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/08/05/linux/%E9%80%82%E7%94%A8%E4%BA%8E%20Linux%20%E7%9A%84%20Windows%20%E5%AD%90%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="是什么">是什么</h2><p>适用于 <strong>Linux</strong> 的 <strong>Windows 子系统</strong>可让开发人员按原样运行 GNU/Linux 环境 - 包括大多数命令行工具、实用工具和应用程序 - 且不会产生传统虚拟机或双启动设置开销。</p><h2 id="WSL2-是什么">WSL2 是什么</h2><p>WSL 2 是适用于 Linux 的 Windows 子系统体系结构的一个新版本，它支持<strong>适用于 Linux 的 Windows 子系统</strong>在 Windows 上运行 ELF64 Linux 二进制文件。 它的主要目标是<strong>提高文件系统性能</strong>。</p><p>也就是说 <strong>WSL2</strong> == <strong>适用于 Linux 的 Windows 子系统</strong></p><h2 id="资源">资源</h2><p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/">微软 WSL 官方文档</a></p><h2 id="安装-wsl">安装 wsl</h2><h3 id="安装条件">安装条件</h3><p>必须运行 Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）或 Windows 11</p><h3 id="安装命令">安装命令</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--install</span></span><br></pre></td></tr></table></figure><p>安装完成后重启电脑</p><p>重启之后运行安装好的<strong>Ubuntu</strong>，会提示设置<strong>用户名</strong>和<strong>密码</strong></p><h3 id="wsl-的一些命令">wsl 的一些命令</h3><p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/basic-commands">wsl 命令</a></p><h3 id="遇到的一些问题">遇到的一些问题</h3><p>wsl --install 安装完成重启电脑 打开 ubuntu 注册错误</p><p>最后是把 wsl 版本设置成 1 然后再打开 ubuntu 发现成功了 最后又重新 wsl --update 了一下</p><p>而且有可能是与其他虚拟软件（virtualbox VMware）兼容冲突了 建议卸载</p><p>具体原因未知</p><h2 id="安装-docker">安装 docker</h2><h3 id="安装条件-2">安装条件</h3><ul><li>确保计算机正在运行 Windows 10，<a href="ms-settings:windowsupdate">更新到版本 2004</a> 版本 <strong>18362</strong> 或更高版本。</li><li>安装了 wsl，而且有 Linux 发行版（Ubuntu/Debian）</li></ul><h3 id="安装">安装</h3><p><a href="https://docs.docker.com/desktop/windows/wsl/#download">docker 下载</a></p><p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/tutorials/wsl-containers">在 Windows 下的 Linux 下载 docker 以及配置的微软官方文档</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git命令</title>
      <link href="/2021/09/24/%E5%B7%A5%E5%85%B7/git%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/09/24/%E5%B7%A5%E5%85%B7/git%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是Git">什么是Git</h3><ul><li><p>解决代码的丢失和备份问题</p></li><li><p>Git 是一个版本控制系统，可以让你跟踪你对文件所做的修改</p><ul><li>例如学习一个项目，跟着敲代码，如果全程提交的话，也方便自己复盘</li></ul></li><li><p>与GitHub / Gitee 配合使用</p></li></ul><h3 id="安装Git">安装Git</h3><p><a href="https://git-scm.com/">git安装</a></p><h3 id="初始配置">初始配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 1. 查看全部配置</span><br><span class="line">git config --list</span><br><span class="line"></span><br><span class="line">// 2. 配置开发者用户名和邮箱</span><br><span class="line">git config --global user.name [username]</span><br><span class="line">git config --global user.email [email]</span><br></pre></td></tr></table></figure><h3 id="如何将本地和GitHub相关联">如何将本地和GitHub相关联</h3><ol><li>根据GitHub官网提示操作即可</li></ol><p><img src="https://raw.githubusercontent.com/foreverForth/source/main/img/image-20231012214838397.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;# test&quot; &gt;&gt; README.md</span><br><span class="line">git init  // 项目初始化</span><br><span class="line">git add README.md </span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin https://github.com/foreverForth/test.git // 与远程仓库相关联</span><br><span class="line">git push -u origin main</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者这样</span><br><span class="line">git remote add origin https://github.com/foreverForth/test.git</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p>如果之后再次提交代码</p><blockquote><p>首先git status 之后git 发现你修改了项目代码 提示你 git add / git commit</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">On branch main</span><br><span class="line">Your branch is up to date with &#x27;origin/main&#x27;.</span><br><span class="line"></span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line">        modified:   README.md</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure><blockquote><p>提交</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;第二次提交&quot;</span><br></pre></td></tr></table></figure><blockquote><p>再次 git status 发现没有需要 commit的了 提示我们 use “git push” to publish your local commits</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">On branch main</span><br><span class="line">Your branch is ahead of &#x27;origin/main&#x27; by 1 commit.</span><br><span class="line">  (use &quot;git push&quot; to publish your local commits)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure><blockquote><p>还记得第一次 提交代码是 git push -u origin main  如果是默认分支 git push即可 或者 git push origin + 指定分支</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
